{
  "hash": "50e8f0b22de8cf1c774d187a4c16abb3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Population Projections\"\n---\n\n\n\n\n\n\nPurpose: Develop tools to understand effects of alternative water management and climate scenarios on future YCT productivity. Generate estimates/projections of future population productivity and redd density from the fitted Bayesian state-space hierarchical Ricker stock-recuitment model.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(manipulate)\nlibrary(tidyverse)\nlibrary(abind)\nlibrary(DT)\nlibrary(sf)\nlibrary(mapview)\n```\n:::\n\n\n\n\n\n\n\n## Load data\n\n***reddctsumm***: summarized redd count data (coordinates, start and end years, number of years, and median redd density)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreddctsumm <- read_csv(\"ReddCounts_DataSummary.csv\")\ndatatable(reddctsumm %>% mutate(across(c(lat, long, med.redds), round, 3)))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-763831df5db9ea92c183\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-763831df5db9ea92c183\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"],[\"3 Channel\",\"Blacktail\",\"Blue Crane\",\"Cowboy Cabin\",\"Fish\",\"Flat\",\"Little Bar BC\",\"Lower Bar BC\",\"Nowlin\",\"Price\",\"Snake River Side Channel\",\"Spring\",\"Upper Bar BC\"],[43.556,43.669,43.428,43.729,43.547,43.543,43.547,43.546,43.526,43.563,43.683,43.427,43.68],[-110.788,-110.699,-110.825,-110.674,-110.847,-110.726,-110.787,-110.784,-110.732,-110.792,-110.702,-110.821,-110.708],[1973,1973,1985,1982,1984,1980,1978,1971,1976,1975,1986,1993,1974],[2014,2016,2015,2016,2016,2015,2016,2021,2015,2006,2002,2007,2016],[31,33,26,30,24,28,34,39,29,24,17,13,39],[77.136,254.763,14.961,29.515,42.007,17.66,30.447,152.236,35.37,28.827,34.239,45.085,116.197]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>stream<\\/th>\\n      <th>lat<\\/th>\\n      <th>long<\\/th>\\n      <th>startyr<\\/th>\\n      <th>endyr<\\/th>\\n      <th>n.year<\\/th>\\n      <th>med.redds<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"stream\",\"targets\":1},{\"name\":\"lat\",\"targets\":2},{\"name\":\"long\",\"targets\":3},{\"name\":\"startyr\",\"targets\":4},{\"name\":\"endyr\",\"targets\":5},{\"name\":\"n.year\",\"targets\":6},{\"name\":\"med.redds\",\"targets\":7}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\n***Mcmcdat***: Raw MCMC samples from the Bayesian model\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMcmcdat <- read_csv(\"Model output/ReddCountsRicker_Phase1_Age01p_mcmcsamps.csv\")\nhead(Mcmcdat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 9,924\n  `A[1]` `A[2]` `A[3]` `A[4]` `A[5]` `A[6]` `A[7]` `A[8]` `A[9]` `A[10]` `A[11]`\n   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl>   <dbl>\n1  1.02   1.31    1.38  1.32   0.953  0.983  0.955   1.41   1.25    1.34   1.54 \n2  1.14   0.939   1.51  0.932  1.47   1.26   0.991   1.31   1.32    1.30   1.29 \n3  0.881  1.10    1.26  1.18   1.19   1.31   0.847   1.10   1.08    1.06   0.989\n4  1.20   1.07    1.19  1.16   1.05   1.13   0.941   1.13   1.14    1.26   0.918\n5  1.35   1.32    1.45  1.34   1.31   1.19   1.31    1.31   1.29    1.23   1.43 \n6  1.29   1.29    1.30  1.33   1.32   1.29   1.31    1.30   1.29    1.29   1.24 \n# ℹ 9,913 more variables: `A[12]` <dbl>, `A[13]` <dbl>, `B[1]` <dbl>,\n#   `B[2]` <dbl>, `B[3]` <dbl>, `B[4]` <dbl>, `B[5]` <dbl>, `B[6]` <dbl>,\n#   `B[7]` <dbl>, `B[8]` <dbl>, `B[9]` <dbl>, `B[10]` <dbl>, `B[11]` <dbl>,\n#   `B[12]` <dbl>, `B[13]` <dbl>, `K[1]` <dbl>, `K[2]` <dbl>, `K[3]` <dbl>,\n#   `K[4]` <dbl>, `K[5]` <dbl>, `K[6]` <dbl>, `K[7]` <dbl>, `K[8]` <dbl>,\n#   `K[9]` <dbl>, `K[10]` <dbl>, `K[11]` <dbl>, `K[12]` <dbl>, `K[13]` <dbl>,\n#   `coef[1,1]` <dbl>, `coef[2,1]` <dbl>, `coef[3,1]` <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n\n\n\n***param.summary***: Summarized MCMC output (means, standard deviations, and credible intervals)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparam.summary <- read.csv(\"Model output/ReddCountsRicker_Phase1_Age01p_ParameterSummary.csv\", row.names = 1)\nhead(param.summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         mean        sd     X2.5.      X25.     X50.     X75.   X97.5.     Rhat\nA[1] 1.095013 0.1820715 0.7305843 0.9794798 1.095077 1.208681 1.450883 1.002610\nA[2] 1.127754 0.2268011 0.7028308 0.9846562 1.117919 1.254814 1.617426 1.002070\nA[3] 1.293163 0.2344209 0.9153351 1.1260246 1.260751 1.434872 1.819449 1.002206\nA[4] 1.143494 0.1983186 0.7593064 1.0183564 1.137705 1.263443 1.550953 1.002444\nA[5] 1.137879 0.1937426 0.7705250 1.0136465 1.128963 1.254722 1.535403 1.001159\nA[6] 1.196733 0.2110791 0.8251400 1.0557746 1.176706 1.317336 1.681661 1.000681\n     n.eff\nA[1]  2900\nA[2]  3400\nA[3]  3300\nA[4]  3100\nA[5]  4900\nA[6]  5000\n```\n\n\n:::\n:::\n\n\n\n\n\n\n***covsummary***: Load covariate summaries: mean, standard deviation, min/max raw values, and min/max z-scored (standardized) values The model was fit with centered/scaled covariate data (i.e., z-scores, to make effect sizes comparable). Thus, environmental input data (to make predictions) needs to be standardized on the same scale. Also use min/max to get range for sliders/inputs.\n\n*Covariate definitions and units:*\n\n* jld_rampdur: duration of ramp down (days)\n* jld_rampratemindoy: timing of ramp down (day of calendar year, i.e., days after Dec. 31)\n* jld_winvar: managed winter flow variation (units obscure)\n* jld_summean: managed summer mean flow (cubic feet per second)\n* jld_peakmag: magnitude of managed peak spring flows (cfs)\n* jld_peaktime: timing of managed peak spring flows (day of brood year, i.e., days after Aug. 31)\n* natq_peakmag: magnitude of natural peak spring flows (cfs)\n* natq_peaktime: timing of natural peak spring flows (day of brood year, i.e., days after Aug. 31)\n* temp_falmean: mean autumn air temperature, Sept-Nov (deg. C)\n* temp_winmean: mean winter air temperature, Dec-Feb (deg. C)\n* temp_sprmean: mean spring air temperature, Mar-Apr (deg. C)\n* temp_summean: mean summer air temperature, Jun-Aug (deg. C)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This does not get run...for JBaldock use only\ncovsrc_jldq_summary <- read_csv(\"Data/Derived/ManagedFlow_SummaryMeanSD_1967-2022.csv\")\ncovsrc_natq_summary <- read_csv(\"Data/Derived/NaturalFlow_SummaryMeanSD_1975-2022.csv\")\ncovsrc_expq_summary <- read_csv(\"Data/Derived/ExperiencedFlow_SummaryMeanSD_1975-2022.csv\")\ncovsrc_temp_summary <- read_csv(\"Data/Derived/Temperature_SummaryMeanSD_1967-2022.csv\")\ncovsummary <- rbind(covsrc_jldq_summary[c(1,2,6:9),], covsrc_natq_summary[c(6:7),], covsrc_temp_summary)\nwrite_csv(covsummary, \"Projections/Covariates_SummaryMeanSD_forProjections.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncovsummary <- read_csv(\"Projections/Covariates_SummaryMeanSD_forProjections.csv\")\ndatatable(covsummary %>% mutate(across(c(mean, sd, min_raw, max_raw, min_zscore, max_zscore), round, 3)))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e57e0930a726a8494a88\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e57e0930a726a8494a88\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],[\"z_jld_rampdur\",\"z_jld_rampratemindoy\",\"z_jld_winvar\",\"z_jld_summean\",\"z_jld_peakmag\",\"z_jld_peaktime\",\"z_natq_peakmag\",\"z_natq_peaktime\",\"z_temp_falmean\",\"z_temp_winmean\",\"z_temp_sprmean\",\"z_temp_summean\"],[10.036,270.446,0.043,2700.374,5884.821,286.109,10948.125,277.625,4.047,-9.289,2.375,14.81],[5.714,7.924,0.065,837.616,1921.198,15.949,3603.321,11.864,1.042,1.798,1.296,1.139],[3,252,0.003,1262.889,2850,235,4341,252,1.371,-13.808,-0.637,11.371],[31,280,0.32,4616.667,11700,321,19600,304,6.266,-5.763,5.406,17.453],[-1.231,-2.328,-0.617,-1.716,-1.58,-3.205,-1.834,-2.16,-2.567,-2.514,-2.324,-3.019],[3.669,1.206,4.265,2.288,3.027,2.188,2.401,2.223,2.129,1.961,2.338,2.32]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>cov<\\/th>\\n      <th>mean<\\/th>\\n      <th>sd<\\/th>\\n      <th>min_raw<\\/th>\\n      <th>max_raw<\\/th>\\n      <th>min_zscore<\\/th>\\n      <th>max_zscore<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"cov\",\"targets\":1},{\"name\":\"mean\",\"targets\":2},{\"name\":\"sd\",\"targets\":3},{\"name\":\"min_raw\",\"targets\":4},{\"name\":\"max_raw\",\"targets\":5},{\"name\":\"min_zscore\",\"targets\":6},{\"name\":\"max_zscore\",\"targets\":7}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\n***airtemp***: Future air temperature projections summarized from raw GCM data provided by Pramod Adhikari (University of Wyoming, WY-ACT)...to enable future projections under baseline warming trends.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairtemp <- read_csv(\"Data/Derived/SeasonalMeanAirTemp_Summarized_1980-2099.csv\")\nhead(airtemp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  type      season  year count temp_avg temp_sd temp_min temp_max\n  <chr>     <chr>  <dbl> <dbl>    <dbl>   <dbl>    <dbl>    <dbl>\n1 corrected fal     1980    15   -0.285   1.48    -2.12      2.80\n2 corrected fal     1981    15    3.41    1.14     1.44      5.73\n3 corrected fal     1982    15    2.50    0.871    0.968     4.51\n4 corrected fal     1983    15    2.93    1.13     0.522     4.48\n5 corrected fal     1984    15    2.92    0.987    1.48      4.76\n6 corrected fal     1985    15    3.17    1.13     1.35      4.99\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n## Map Sites\n\nMap the approximate mid-points of WGFD redd counts monitoring reaches\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreddlocs_sp <- st_as_sf(reddctsumm, coords = c(\"long\", \"lat\"), crs = \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84\")\nmapview(reddlocs_sp)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-a454a365db72ea5ebc05\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a454a365db72ea5ebc05\">{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"createMapPane\",\"args\":[\"point\",440]},{\"method\":\"addCircleMarkers\",\"args\":[[43.55623017,43.66881478,43.42787225,43.72893903,43.5467974,43.54300482,43.54701598,43.54628223,43.52638051,43.56333321,43.683012,43.4270652,43.67985923],[-110.7882611,-110.6986929,-110.8246243,-110.6741424,-110.8469954,-110.7255992,-110.7867088,-110.7843594,-110.7321466,-110.792471,-110.70152,-110.8209696,-110.7077563],6,null,\"reddlocs_sp\",{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"pane\":\"point\",\"stroke\":true,\"color\":\"#333333\",\"weight\":1,\"opacity\":0.9,\"fill\":true,\"fillColor\":\"#6666FF\",\"fillOpacity\":0.6},null,null,[\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>1&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>3 Channel&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1973&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2014&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>31&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td> 77.13593&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>2&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Blacktail&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1973&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2016&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>33&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td>254.76282&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>3&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Blue Crane&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1985&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2015&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>26&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td> 14.96133&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>4&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Cowboy Cabin&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1982&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2016&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>30&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td> 29.51520&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>5&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Fish&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1984&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2016&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>24&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td> 42.00739&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>6&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Flat&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1980&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2015&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>28&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td> 17.66007&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>7&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Little Bar BC&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1978&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2016&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>34&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td> 30.44726&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>8&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Lower Bar BC&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1971&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2021&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>39&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td>152.23632&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>9&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Nowlin&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1976&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2015&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>29&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td> 35.37045&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>10&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Price&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1975&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2006&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>24&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td> 28.82737&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>11&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Snake River Side Channel&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1986&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2002&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>17&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td> 34.23891&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>12&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Spring&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1993&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2007&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>13&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td> 45.08456&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>13&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Upper Bar BC&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>startyr&emsp;<\\/th><td>1974&emsp;<\\/td><\\/tr><tr><td>3<\\/td><th>endyr&emsp;<\\/th><td>2016&emsp;<\\/td><\\/tr><tr><td>4<\\/td><th>n.year&emsp;<\\/th><td>39&emsp;<\\/td><\\/tr><tr><td>5<\\/td><th>med.redds&emsp;<\\/th><td>116.19670&emsp;<\\/td><\\/tr><tr><td>6<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\"],{\"maxWidth\":800,\"minWidth\":50,\"autoPan\":true,\"keepInView\":false,\"closeButton\":true,\"closeOnClick\":true,\"className\":\"\"},[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addHomeButton\",\"args\":[-110.8469954,43.4270652,-110.6741424,43.72893903,true,\"reddlocs_sp\",\"Zoom to reddlocs_sp\",\"<strong> reddlocs_sp <\\/strong>\",\"bottomright\"]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"CartoDB.DarkMatter\",\"OpenStreetMap\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"reddlocs_sp\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addLegend\",\"args\":[{\"colors\":[\"#6666FF\"],\"labels\":[\"reddlocs_sp\"],\"na_color\":null,\"na_label\":\"NA\",\"opacity\":1,\"position\":\"topright\",\"type\":\"factor\",\"title\":\"\",\"extra\":null,\"layerId\":null,\"className\":\"info legend\",\"group\":\"reddlocs_sp\"}]}],\"limits\":{\"lat\":[43.4270652,43.72893903],\"lng\":[-110.8469954,-110.6741424]},\"fitBounds\":[43.4270652,-110.8469954,43.72893903,-110.6741424,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n## Control Panel\n\nDo not change these parameters as they are specific to the fitted model and data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn.pops <- 13 # number of populations\nn.covars <- 14 # number of covariates in model\npopshort <- c(\"THCH\", \"BLKT\", \"BLCR\", \"COCA\", \"FISH\", \"FLAT\", \"LTBC\", \"LOBC\", \"NOWL\", \"PRCE\", \"SRSC\", \"SPRG\", \"UPBC\") # abbreviated population names\npoplong <- c(\"Three Channel Spring\", \"Blacktail Spring\", \"Blue Crane Creek\", \"Cowboy Cabin Spring\", \"Fish Creek\", \"Flat Creek\", \"Little Bar BC Spring\", \"Lower Bar BC Spring\", \"Nowlin Creek\", \"Price Spring\", \"Snake River Side Channel\", \"Spring Creek\", \"Upper Bar BC Spring\")\n```\n:::\n\n\n\n\n\n\nThese can be changed depending on what you are interested in doing with future projections (for time series)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn.years <- 50 # number of years to run projections\nn.sims <- 100 # number of simulations/iterations (greater number of simulations will better account for uncertainty and predictions will be less biased, but more simulations takes longer to run. Ideally, you would use all the MCMC samples (n = 3000) but this would take forever)\nstartyear <- 2020 # first year of projections\n```\n:::\n\n\n\n\n\n\n\n## Parameter Summaries\n\nView parameter summary tables: mean, standard deviation, and quantiles of estimated parameter(s) of interest. To export any of the tables returned below, simply use the function write_csv(x, path = \"\"), replacing x with the table of interest specifying the file path as a character vector. \n\n\nGlobal intrinsic rate of productivity (mu.A), population specific rates (A), and among-population standard deviation (sigma.A)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(param.summary[grepl(\"A\", row.names(param.summary)),])\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-ce2e7e3b2225e8d026e2\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ce2e7e3b2225e8d026e2\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"A[1]\",\"A[2]\",\"A[3]\",\"A[4]\",\"A[5]\",\"A[6]\",\"A[7]\",\"A[8]\",\"A[9]\",\"A[10]\",\"A[11]\",\"A[12]\",\"A[13]\",\"mu.A\",\"sigma.A\"],[1.09501303212082,1.12775388214129,1.29316344564779,1.14349444841667,1.1378786596633,1.19673250391145,1.08980416154275,1.23838305408099,1.12766186805773,1.24475659811627,1.16817383455462,1.14533077829957,1.14230447059834,1.16894895437386,0.174073655638141],[0.182071457117697,0.226801085851233,0.234420865390093,0.198318590272591,0.1937426250944,0.211079109064077,0.214221680467877,0.246981609917777,0.195711223918883,0.225173552969064,0.22276163175673,0.230007898096662,0.188452152130725,0.144527361120102,0.125135030215122],[0.7305843355943,0.70283079712896,0.915335115313388,0.7593063856260009,0.770524993884788,0.825139962872026,0.637188215808106,0.823315917095533,0.737845470628101,0.873554667055803,0.736702281756494,0.663380773347013,0.777564908949246,0.900289874578482,0.008021273474908591],[0.97947980078113,0.984656154719726,1.12602455617209,1.01835637888552,1.01364645000631,1.0557746012335,0.965929515068412,1.07532870550462,1.00550763051793,1.09275626238659,1.03064899899131,1.00933607882273,1.02208843593381,1.07001425854987,0.0753103367700763],[1.095076585444,1.11791893068505,1.26075062297384,1.13770505688857,1.12896267455444,1.17670630714087,1.09785807677989,1.20475389593962,1.12584314573774,1.2199155319748,1.15876720426731,1.14104440170934,1.13718864968686,1.16266066885157,0.155216997571341],[1.20868110650399,1.25481383772812,1.43487200215133,1.26344312620355,1.25472163169075,1.31733555828728,1.22246339993929,1.37052874795287,1.24970826366903,1.36818596031918,1.29138894668025,1.27994440705904,1.25741820296965,1.26171511010298,0.24625780909648],[1.45088266156447,1.61742595461104,1.81944871250344,1.5509532984885,1.53540341517025,1.68166077421244,1.49797903328881,1.82414564846671,1.52955731700252,1.77024948806774,1.64855826931839,1.62415752112713,1.52816947456855,1.46726346073226,0.480917094298353],[1.00260977586141,1.00207042916568,1.00220617739675,1.00244375982891,1.00115924976116,1.00068109321884,1.00083221120266,1.00220068622952,0.999805796037217,1.00140867044019,1.00252224667274,1.00314814912283,1.00116343630136,1.00250342638719,1.00100394666464],[2900,3400,3300,3100,4900,5000,5000,3300,5000,4400,3000,2900,4900,3000,5000]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>mean<\\/th>\\n      <th>sd<\\/th>\\n      <th>X2.5.<\\/th>\\n      <th>X25.<\\/th>\\n      <th>X50.<\\/th>\\n      <th>X75.<\\/th>\\n      <th>X97.5.<\\/th>\\n      <th>Rhat<\\/th>\\n      <th>n.eff<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"mean\",\"targets\":1},{\"name\":\"sd\",\"targets\":2},{\"name\":\"X2.5.\",\"targets\":3},{\"name\":\"X25.\",\"targets\":4},{\"name\":\"X50.\",\"targets\":5},{\"name\":\"X75.\",\"targets\":6},{\"name\":\"X97.5.\",\"targets\":7},{\"name\":\"Rhat\",\"targets\":8},{\"name\":\"n.eff\",\"targets\":9}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\nPopulation specific strength of density dependence (Ricker b)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(param.summary[grepl(\"B\", row.names(param.summary)),])\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-6222678fb83ba56ba012\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6222678fb83ba56ba012\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"B[1]\",\"B[2]\",\"B[3]\",\"B[4]\",\"B[5]\",\"B[6]\",\"B[7]\",\"B[8]\",\"B[9]\",\"B[10]\",\"B[11]\",\"B[12]\",\"B[13]\"],[0.0130056479954985,0.0041863169184377,0.0758039127816158,0.0304655471817396,0.0265085540017725,0.0621989882366854,0.0255926942360372,0.00814460492863339,0.0288658823218239,0.0404530764226235,0.0287259838450089,0.0214702374387838,0.00898140159455992],[0.00259234834782135,0.0008485725202434749,0.0129393260337337,0.00610045667109619,0.00497858658770255,0.0136385346036622,0.00689202909535906,0.00172794122060147,0.0058436082958175,0.008745182335810319,0.00710595951537108,0.00525578108134715,0.00152798680905933],[0.00802415367526973,0.00265667438688761,0.0533860643091843,0.0194680520876923,0.017254563239511,0.0389327549983813,0.0117153421825499,0.00495660080806195,0.0182049380617082,0.0248493068166376,0.0154264925555715,0.0114429877070049,0.00620372631159537],[0.0112774646010545,0.00363927612751357,0.066786546641197,0.026427472547974,0.0231971346099158,0.0526577095052901,0.0210178903192046,0.0069662813166452,0.0250681804674195,0.0341253764253385,0.0241637222381488,0.0180898812164461,0.00797198812918558],[0.0129645462916098,0.00412663130510834,0.07459565635321259,0.0299450591795855,0.0263734354297631,0.0604742250680614,0.0257244601471708,0.008059355529788001,0.0286255874045471,0.0397402926340544,0.0284507548082747,0.0212597601483202,0.00888213090529359],[0.0145939477309679,0.0046542045472239,0.08355975753668719,0.0340514668189868,0.0295984163442433,0.07012029414334731,0.0301216664496437,0.00921936065790116,0.0323734480193308,0.0462772826703932,0.0328517974503878,0.0246299154766518,0.00989420745880035],[0.0184414728316899,0.00608282357165922,0.105021432242396,0.0437143860364326,0.0369460563343906,0.09344609482177051,0.0391664156967416,0.011838938056729,0.0412948357126811,0.058455915471799,0.043813027081438,0.0325276936300209,0.0123627002250233],[1.00112481091999,1.00155862961197,1.00344349312262,1.00173291294048,1.00147001924847,1.00147753263641,1.00110568103124,1.00229949641638,1.00026818899996,1.00347254425716,1.01446244157917,1.00215515692262,1.00139988269982],[4900,4100,2400,3800,4300,4200,5000,3200,5000,2400,5000,3600,4400]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>mean<\\/th>\\n      <th>sd<\\/th>\\n      <th>X2.5.<\\/th>\\n      <th>X25.<\\/th>\\n      <th>X50.<\\/th>\\n      <th>X75.<\\/th>\\n      <th>X97.5.<\\/th>\\n      <th>Rhat<\\/th>\\n      <th>n.eff<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"mean\",\"targets\":1},{\"name\":\"sd\",\"targets\":2},{\"name\":\"X2.5.\",\"targets\":3},{\"name\":\"X25.\",\"targets\":4},{\"name\":\"X50.\",\"targets\":5},{\"name\":\"X75.\",\"targets\":6},{\"name\":\"X97.5.\",\"targets\":7},{\"name\":\"Rhat\",\"targets\":8},{\"name\":\"n.eff\",\"targets\":9}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\nGlobal covariate effects\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(param.summary[grepl(\"mu.coef\", row.names(param.summary)),])\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-bab4c38c511c7b6b081d\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-bab4c38c511c7b6b081d\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"mu.coef[1]\",\"mu.coef[2]\",\"mu.coef[3]\",\"mu.coef[4]\",\"mu.coef[5]\",\"mu.coef[6]\",\"mu.coef[7]\",\"mu.coef[8]\",\"mu.coef[9]\",\"mu.coef[10]\",\"mu.coef[11]\",\"mu.coef[12]\",\"mu.coef[13]\",\"mu.coef[14]\"],[0.0753513933188124,0.11833645433488,0.045238222451345,-0.0715527760330921,0.0294184460251261,0.0220999888048781,0.08638939468862609,-0.115636693023264,0.0748386510858826,-0.104378639033423,-0.13058246282598,0.100504905903648,-0.020457947345527,-0.112648352504927],[0.0706219341694484,0.0925085685082183,0.134132219547038,0.0810803986880239,0.0887703277508773,0.0624401576072597,0.109699079248319,0.0650702240159507,0.0750115457332774,0.0743650613200865,0.0971496050895161,0.0600530337587014,0.0507534006649655,0.0400333829899404],[-0.0578823788262636,-0.09222514246260401,-0.194520877219049,-0.211717442143684,-0.144358155033286,-0.103117535410247,-0.11418070565693,-0.243447388530196,-0.0690191356543996,-0.251341157645087,-0.331591128465102,-0.014391203535916,-0.124879054946839,-0.193691195979711],[0.0285740874187277,0.06731018048510271,-0.0523894301165413,-0.126365966417812,-0.0415453711238761,-0.0195451596566753,0.0110298331452293,-0.159463809388664,0.021506963890724,-0.152039906771786,-0.193843681583404,0.0605326290344373,-0.0531779799781396,-0.138708302543304],[0.0722243834674292,0.125702717022544,0.0376972298719287,-0.0831636904421359,0.0467996318317596,0.0236917746307155,0.0800367495209668,-0.115960992422223,0.0731793284484711,-0.10402479521189,-0.126869811821065,0.0995864246992326,-0.0192366128325723,-0.11231218257217],[0.119225517260639,0.178777837853569,0.137604184596991,-0.0261507287165015,0.0972033719232068,0.0648420995317909,0.155566941589153,-0.0705409031454,0.127121692770615,-0.0539836463260213,-0.06497120162332851,0.139294042940845,0.0131693684893629,-0.0855588586567405],[0.224445104218081,0.28592070966067,0.318746589310567,0.112005302087344,0.173882974424162,0.141745605505645,0.322198798733736,0.00617965514451404,0.225373758457555,0.0397231634435441,0.0477215516287347,0.22011285053086,0.0766197930499177,-0.0342300699878732],[1.00081129147824,1.00894530968024,1.00392206609459,1.00530724920023,1.0102581865136,1.00415090340909,1.00836483479759,1.00487914343223,1.00976892694921,1.00370335176626,1.00597140578673,1.0034035369983,1.00536610141808,1.00089767837855],[5000,1100,2100,1700,950,2000,1100,1800,990,2200,1500,2400,1700,5000]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>mean<\\/th>\\n      <th>sd<\\/th>\\n      <th>X2.5.<\\/th>\\n      <th>X25.<\\/th>\\n      <th>X50.<\\/th>\\n      <th>X75.<\\/th>\\n      <th>X97.5.<\\/th>\\n      <th>Rhat<\\/th>\\n      <th>n.eff<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"mean\",\"targets\":1},{\"name\":\"sd\",\"targets\":2},{\"name\":\"X2.5.\",\"targets\":3},{\"name\":\"X25.\",\"targets\":4},{\"name\":\"X50.\",\"targets\":5},{\"name\":\"X75.\",\"targets\":6},{\"name\":\"X97.5.\",\"targets\":7},{\"name\":\"Rhat\",\"targets\":8},{\"name\":\"n.eff\",\"targets\":9}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\nPopulation-specific covariate effects\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmp <- param.summary[grepl(\"coef\", row.names(param.summary)),]\ndatatable(tmp[!grepl(c(\"mu|sigma\"), row.names(tmp)),])\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-b26e0daf7d9598b94519\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b26e0daf7d9598b94519\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"coef[1,1]\",\"coef[2,1]\",\"coef[3,1]\",\"coef[4,1]\",\"coef[5,1]\",\"coef[6,1]\",\"coef[7,1]\",\"coef[8,1]\",\"coef[9,1]\",\"coef[10,1]\",\"coef[11,1]\",\"coef[12,1]\",\"coef[13,1]\",\"coef[1,2]\",\"coef[2,2]\",\"coef[3,2]\",\"coef[4,2]\",\"coef[5,2]\",\"coef[6,2]\",\"coef[7,2]\",\"coef[8,2]\",\"coef[9,2]\",\"coef[10,2]\",\"coef[11,2]\",\"coef[12,2]\",\"coef[13,2]\",\"coef[1,3]\",\"coef[2,3]\",\"coef[3,3]\",\"coef[4,3]\",\"coef[5,3]\",\"coef[6,3]\",\"coef[7,3]\",\"coef[8,3]\",\"coef[9,3]\",\"coef[10,3]\",\"coef[11,3]\",\"coef[12,3]\",\"coef[13,3]\",\"coef[1,4]\",\"coef[2,4]\",\"coef[3,4]\",\"coef[4,4]\",\"coef[5,4]\",\"coef[6,4]\",\"coef[7,4]\",\"coef[8,4]\",\"coef[9,4]\",\"coef[10,4]\",\"coef[11,4]\",\"coef[12,4]\",\"coef[13,4]\",\"coef[1,5]\",\"coef[2,5]\",\"coef[3,5]\",\"coef[4,5]\",\"coef[5,5]\",\"coef[6,5]\",\"coef[7,5]\",\"coef[8,5]\",\"coef[9,5]\",\"coef[10,5]\",\"coef[11,5]\",\"coef[12,5]\",\"coef[13,5]\",\"coef[1,6]\",\"coef[2,6]\",\"coef[3,6]\",\"coef[4,6]\",\"coef[5,6]\",\"coef[6,6]\",\"coef[7,6]\",\"coef[8,6]\",\"coef[9,6]\",\"coef[10,6]\",\"coef[11,6]\",\"coef[12,6]\",\"coef[13,6]\",\"coef[1,7]\",\"coef[2,7]\",\"coef[3,7]\",\"coef[4,7]\",\"coef[5,7]\",\"coef[6,7]\",\"coef[7,7]\",\"coef[8,7]\",\"coef[9,7]\",\"coef[10,7]\",\"coef[11,7]\",\"coef[12,7]\",\"coef[13,7]\",\"coef[1,8]\",\"coef[2,8]\",\"coef[3,8]\",\"coef[4,8]\",\"coef[5,8]\",\"coef[6,8]\",\"coef[7,8]\",\"coef[8,8]\",\"coef[9,8]\",\"coef[10,8]\",\"coef[11,8]\",\"coef[12,8]\",\"coef[13,8]\",\"coef[1,9]\",\"coef[2,9]\",\"coef[3,9]\",\"coef[4,9]\",\"coef[5,9]\",\"coef[6,9]\",\"coef[7,9]\",\"coef[8,9]\",\"coef[9,9]\",\"coef[10,9]\",\"coef[11,9]\",\"coef[12,9]\",\"coef[13,9]\",\"coef[1,10]\",\"coef[2,10]\",\"coef[3,10]\",\"coef[4,10]\",\"coef[5,10]\",\"coef[6,10]\",\"coef[7,10]\",\"coef[8,10]\",\"coef[9,10]\",\"coef[10,10]\",\"coef[11,10]\",\"coef[12,10]\",\"coef[13,10]\",\"coef[1,11]\",\"coef[2,11]\",\"coef[3,11]\",\"coef[4,11]\",\"coef[5,11]\",\"coef[6,11]\",\"coef[7,11]\",\"coef[8,11]\",\"coef[9,11]\",\"coef[10,11]\",\"coef[11,11]\",\"coef[12,11]\",\"coef[13,11]\",\"coef[1,12]\",\"coef[2,12]\",\"coef[3,12]\",\"coef[4,12]\",\"coef[5,12]\",\"coef[6,12]\",\"coef[7,12]\",\"coef[8,12]\",\"coef[9,12]\",\"coef[10,12]\",\"coef[11,12]\",\"coef[12,12]\",\"coef[13,12]\",\"coef[1,13]\",\"coef[2,13]\",\"coef[3,13]\",\"coef[4,13]\",\"coef[5,13]\",\"coef[6,13]\",\"coef[7,13]\",\"coef[8,13]\",\"coef[9,13]\",\"coef[10,13]\",\"coef[11,13]\",\"coef[12,13]\",\"coef[13,13]\",\"coef[1,14]\",\"coef[2,14]\",\"coef[3,14]\",\"coef[4,14]\",\"coef[5,14]\",\"coef[6,14]\",\"coef[7,14]\",\"coef[8,14]\",\"coef[9,14]\",\"coef[10,14]\",\"coef[11,14]\",\"coef[12,14]\",\"coef[13,14]\"],[0.06567000389567119,0.051206811162803,0.161054209545442,0.06495853755746819,0.0537520211997661,0.054566646590949,0.116313815751015,0.105832569876733,0.0257457136688506,0.0313682227745643,0.129093294490452,0.0542757327077082,0.0689264672360058,0.081971767476021,0.126714532898764,0.11252523964219,0.151123497426942,0.091674153128073,0.129437917696163,0.08977521969319301,0.113376715503245,0.123734725468169,0.169091881251577,0.107929029158858,0.119400055766833,0.120162074389,0.0355838301304058,0.00234080757988283,0.06769496348411221,0.0397835984060766,0.106623465927185,0.0350867870340229,0.0546419709905498,0.0300918528862577,0.0499429893378154,0.0257240023487696,0.0659652617801878,0.0592368276089773,0.0162776311562693,-0.110608637144628,-0.027063786554257,-0.115559571243667,-0.068994186024477,-0.08753654397174181,0.0190215784098846,-0.0844907684094662,-3.29316115077626e-06,-0.09932474738805359,-0.0963114287088483,-0.0887984108355757,-0.0882987516124161,-0.0883471911657525,0.0267624855874363,0.0419327497413427,0.0251596039054948,0.0327306656866079,0.0256383563752209,0.0348061374419178,0.0271912577746427,0.0267700315854531,0.0209246006137669,0.0427135608770694,0.0201350740505772,0.0279174993532598,0.0298613155785223,0.0276386869057187,0.0157628011098193,0.00532144249575394,0.00931457056008065,0.0139871362241132,0.037665897855023,0.0149155985261179,0.0182409490853618,0.0249149433521317,0.0346285796108526,0.0218840782384497,0.0229407405565875,0.0395107436255901,0.08296903724278849,0.0865962007333235,0.08115755466672139,0.0753938740305123,0.10295082267454,0.08944580648884159,0.0968286785875381,0.079461471302065,0.0793771885595291,0.0888529499482008,0.0736865231469333,0.0845351396216871,0.101912790409999,-0.104792725811507,-0.126825829850709,-0.121448645726898,-0.135802816367216,-0.102681186412755,-0.125888347600283,-0.100812221057141,-0.104681408783578,-0.127037658643269,-0.112309266259494,-0.108942201863047,-0.102474814085642,-0.126601092918792,0.0641771922471414,0.0563839302178925,0.08092070184814,0.07781108601448559,0.075075809158932,0.0533244816368838,0.0701095954681669,0.0596633243059523,0.0934247078322732,0.112591846834855,0.0739949078768472,0.07205330788701859,0.0858396819923332,-0.0663269533289559,-0.199995994235188,-0.113701857696322,-0.0567564623983034,-0.185949405582363,-0.0988167923167949,-0.0147333699222462,-0.154962825123582,-0.109028566220192,-0.0556401229746462,-0.0728079284356184,-0.201417903649091,-0.0269372649088557,-0.137293355988231,-0.13610413169257,-0.129792852630174,-0.107539455119397,-0.120811611917318,-0.135267763777244,-0.129041147398564,-0.155166378124049,-0.131479427839644,-0.130940425330175,-0.138594234598464,-0.130024982541842,-0.115715106064983,0.108276327609084,0.0775815328071757,0.08705284870530131,0.124344277950781,0.099553392702109,0.09775496590211211,0.0899624450086845,0.09430143154126699,0.122468581111263,0.129431476528452,0.09302301150926939,0.0920981063748115,0.0912142488961304,-0.0647457901988233,0.022316689908238,-0.00496804831757679,-0.0260740634737025,-0.00090320163457956,-0.0191461565555815,-0.0287095702397481,-0.0319500650668962,-0.00688147567640551,0.0049853464096625,-0.0621909164237726,-0.0352342819945468,-0.0135052421026993,-0.113722702484023,-0.121878940972711,-0.0988623557794511,-0.1323369810199,-0.113221301755214,-0.114652482757852,-0.129212522005677,-0.112748496148547,-0.086284846948123,-0.113182576307397,-0.107770773328264,-0.117746523718078,-0.105043713831039],[0.0878572008505623,0.0943879395554736,0.132706768129711,0.0860508173970761,0.0891314623374122,0.09141103147938009,0.124049753708701,0.118284351929328,0.0943467454919005,0.092277056864129,0.132263446248763,0.117008038476558,0.0821070571218205,0.108994717977153,0.114535770469198,0.116908008787942,0.105508082603418,0.110616529035957,0.106241471857916,0.117653551695027,0.121956681118334,0.107953153339323,0.114647622537205,0.122067614502276,0.123445203455774,0.0932863456103673,0.145585746119329,0.168327167685397,0.17744365543396,0.16193643410478,0.167841643466126,0.162999207673126,0.171843086415656,0.154788161234091,0.15389963631336,0.164937190511411,0.176833337141924,0.181152100743519,0.150036741324189,0.0849947454121007,0.105802604744372,0.0982111070586907,0.104289038126066,0.0839787339200532,0.150703715813835,0.122877517381838,0.157128962062593,0.0931190644757839,0.0953928999422821,0.117709525829086,0.100044182881115,0.08999680895962051,0.09366650664173411,0.09189303484333999,0.0985932259785099,0.0956537293365033,0.0920936512464899,0.0908742178130017,0.09932288680472071,0.103205580538102,0.097533488002087,0.0932893794206099,0.09958356364806541,0.09764344924880899,0.0946723747436629,0.071704990393963,0.0852519042190976,0.0833431926051532,0.0786995993259942,0.08038542877927719,0.0819513618313196,0.0822539524794053,0.0824546327985962,0.0766520983428214,0.0796019329008031,0.0837782406321799,0.08454649060515509,0.06785677416227701,0.116258350134937,0.121293840852717,0.118987182481885,0.115197606171905,0.120720943547446,0.120839675918016,0.121942643503282,0.121636949169616,0.121374837257682,0.12044475331307,0.123358522240054,0.119669411722456,0.114406046524553,0.0724408939600787,0.07749092584764709,0.0763183639514828,0.0757951793986055,0.0742295108097784,0.0777768715922692,0.0831435895710624,0.081431737201747,0.0769826961706483,0.0764599025809443,0.08209821213958721,0.08196957815761879,0.0721396358673545,0.08097096428062819,0.0889875638958765,0.08756234859116729,0.0838011354902633,0.0894604998297313,0.09178905639592209,0.0948037602857833,0.09322974507617809,0.0921230907785823,0.09736174413458069,0.0953120215740246,0.0902038393677148,0.08677323496562669,0.0819873186975732,0.121476085000062,0.112474314082401,0.0946502157901797,0.1253189345186,0.106437874162069,0.128557714035409,0.13108219786024,0.097696166549681,0.09624286478795881,0.120215800583715,0.128194469316107,0.0880442605034365,0.108715624529634,0.1099051619898,0.113012352292266,0.107077102213664,0.110523857390517,0.110683974610599,0.116764252592156,0.122743269976919,0.113506446501824,0.11027324812461,0.118171397717659,0.111592651669408,0.10579303447792,0.07070351474748179,0.0729287349586815,0.0784611104392621,0.0852372157937703,0.0750705780802893,0.0788193733266685,0.0825752406944596,0.0849784206626613,0.0858129124387807,0.0882902014582832,0.0897753828224877,0.08001117687218599,0.0692125625524341,0.0670126078047449,0.0638079261870592,0.06368460125847721,0.0587863517627741,0.0573442391637987,0.0590699334402106,0.07329838004476751,0.0706617056810766,0.0602628444683047,0.0594905303137728,0.0801809264598711,0.06761049417375831,0.0589946018676023,0.0490741369536078,0.0566363950880225,0.0577470932049046,0.0521688451430818,0.0554181160592359,0.0542249465454187,0.0622798953998925,0.0591119347551662,0.0591912362757036,0.0572907714168757,0.06267158049294839,0.0645541647822714,0.0484573210426679],[-0.09927058456412011,-0.148307345581951,-0.0350170326109585,-0.106496390285631,-0.1339670343526,-0.133350720696101,-0.07977572970066581,-0.09701212717195019,-0.177817195874321,-0.167343521906887,-0.0715265629516164,-0.19901048328306,-0.093484799775595,-0.153711949136661,-0.138646293646934,-0.137829933370846,-0.0748282555226716,-0.153589400787904,-0.10182798628442,-0.158652054113399,-0.154622917866624,-0.123905790237239,-0.0923304386150593,-0.160416312474612,-0.147682312525202,-0.08218482751849319,-0.216974708570372,-0.311951446020986,-0.259456046115645,-0.266520840035742,-0.190272144829787,-0.278487076207802,-0.257664085110555,-0.270715304180472,-0.232280267276005,-0.290747946740444,-0.247906537606337,-0.269043330169614,-0.265342005080838,-0.287695311251432,-0.195255052250088,-0.329989220076067,-0.250735082068265,-0.255499204898472,-0.18849693051423,-0.318505588688662,-0.216275310030431,-0.29390852902322,-0.292746776602446,-0.322840612687677,-0.280788366608979,-0.257078444542697,-0.161679173794063,-0.140169011748293,-0.173403431633548,-0.156888940034952,-0.156890180301858,-0.145302993379118,-0.175602196032232,-0.18373393979703,-0.175960521684397,-0.142127459945051,-0.185810958204276,-0.171483380088995,-0.160233084672541,-0.114823744763657,-0.161943889215826,-0.178094081799937,-0.15901304924996,-0.155384640048126,-0.119840696270245,-0.161418646463142,-0.150754169264779,-0.132071998505331,-0.120941211235096,-0.150069242503689,-0.145446587278165,-0.0911522701145554,-0.131755450297531,-0.144426404934318,-0.143183037499951,-0.135254323341106,-0.115592247907077,-0.141774587366169,-0.129590474581991,-0.150600526277527,-0.154358066009244,-0.132334877768498,-0.168110686421917,-0.139863191581399,-0.101437535337417,-0.250150403725976,-0.283651425145129,-0.276712157722708,-0.292499361452709,-0.246619081892869,-0.287672595589837,-0.256902096879227,-0.259267052440732,-0.287074972477108,-0.259217942204657,-0.268695332609766,-0.260632686937412,-0.269702543771554,-0.0929176902275195,-0.116035109186943,-0.08987347347525421,-0.07868874019133219,-0.0968319718886715,-0.136715090852915,-0.119368001838288,-0.136450499168625,-0.0732316040493594,-0.0570898983504111,-0.116944151087168,-0.102732857031823,-0.075190757790325,-0.226704571417623,-0.437658425296104,-0.349141451227439,-0.235492570464632,-0.442503528320139,-0.309782110608603,-0.239795289604403,-0.448771211838376,-0.309289214087009,-0.234797160643952,-0.305153831639952,-0.466384133362698,-0.187746735362941,-0.357400656826622,-0.354816610954282,-0.359015659653264,-0.321359195893394,-0.342920580762685,-0.366813822945147,-0.367576435670516,-0.419951159392739,-0.370242671238142,-0.347023619348726,-0.383415205995728,-0.362626380654953,-0.328671927403258,-0.0223607510848508,-0.0703124635120628,-0.0796579578861689,-0.0279801441142363,-0.0443846980882232,-0.0523361186581498,-0.0766089878955669,-0.0757737622403408,-0.0297360328391783,-0.0220286148343455,-0.08846167795926579,-0.0711546062364587,-0.0423310692210385,-0.20587346512102,-0.0968992908315533,-0.130769413970443,-0.145878413169451,-0.111345220485009,-0.139728936972181,-0.178274441522605,-0.186655643649799,-0.12790053122951,-0.108837993114424,-0.248352603222811,-0.171186678989633,-0.132471478135624,-0.208774829545294,-0.243258134724034,-0.207293601183302,-0.244642588076999,-0.221113883538209,-0.225273712390836,-0.272271496811694,-0.230226533988153,-0.189901282176363,-0.228637990558609,-0.227084121679163,-0.251472269384458,-0.197054011732505],[0.0107503181846876,-0.0051311050969572,0.0650757090873865,0.0100979300626434,-0.000498622687798918,-0.00207955562183478,0.0357347433655433,0.0298751146434687,-0.0293187342160716,-0.0218192732751834,0.041878252540296,-0.00587215783337677,0.0167991541042888,0.0138060274541495,0.06517536726649301,0.0431329210261812,0.0884458687011281,0.0266462294633563,0.0675173978591319,0.0196034831638186,0.0449580060693086,0.0659863226841602,0.105754553082103,0.0375309573412788,0.0506995908909395,0.06383379879214229,-0.0689703677244879,-0.116176330882244,-0.0511460402896429,-0.0715520753139653,-0.0133469410600452,-0.07416131653701841,-0.059606995367887,-0.0723517534054795,-0.0577934501081291,-0.08583706664147329,-0.0545358552305414,-0.0586038136879824,-0.0857653666325779,-0.16213043671916,-0.102456505929238,-0.170250078087747,-0.135636095905027,-0.138803066437375,-0.0919943017829583,-0.156884263330871,-0.10808364593625,-0.153773604637481,-0.153364026656118,-0.156388500434084,-0.147264708058958,-0.145335263975229,-0.0455397991767876,-0.0254142266352934,-0.0530598129691001,-0.0409016326504402,-0.0449291556125941,-0.0307835757132624,-0.0461940100702325,-0.0518207215547633,-0.053584914496382,-0.0244201529686029,-0.0543762674335394,-0.0468591959005727,-0.0427633543558918,-0.0194647291041335,-0.0363976434866462,-0.0435263339434365,-0.0377842660252774,-0.0337610854708249,-0.0157849387756397,-0.0327012824596686,-0.0311634071841764,-0.0233812885085739,-0.0165272332135147,-0.0286590971808359,-0.0283828078952962,-0.00515476085716627,0.00304629418616775,0.00715238216424475,0.00154676879988609,-0.00283996979238399,0.0207006217764587,0.00872378437931183,0.0145703277254861,-0.000246750923904193,-0.000792220091057736,0.0073696520716471,-0.00547267675938554,0.00502771145897812,0.0225911123750954,-0.152303459987389,-0.17665061693936,-0.170440643088056,-0.184591417442008,-0.153300938870935,-0.174716336762876,-0.155569120482921,-0.157577018249918,-0.176681907263402,-0.162566557426686,-0.161067371237152,-0.154896417987918,-0.175412164797152,0.00963369292721095,-0.0030286118345552,0.0226415933580636,0.0209383505675371,0.0149066234043989,-0.00602833448851058,0.00842781501001826,0.00068520717479742,0.0295121008331936,0.0440722403325368,0.0125317488769499,0.0121677679304294,0.025943137108042,-0.119083982269827,-0.282740495238867,-0.18099550955224,-0.119067836990137,-0.270277940473198,-0.164974614343991,-0.0993001407515368,-0.231120106979076,-0.171916594416885,-0.118386271181446,-0.147640391365164,-0.288541069063628,-0.0863899969647425,-0.208586988741323,-0.208263890771945,-0.204588096655917,-0.176827324701178,-0.191796261890438,-0.207185444366958,-0.202564778769471,-0.229646411175292,-0.202672718321165,-0.203790673633641,-0.213537496150478,-0.201166788819845,-0.184916491011132,0.0620470254953315,0.0317694637026397,0.0412193586309522,0.06730490805096211,0.050304397372875,0.0487775018322843,0.0402049026628781,0.0419049790099299,0.065603386851239,0.0720131894976085,0.0418694686731725,0.0430206305419598,0.0455064985763449,-0.108006713474639,-0.0202618350118977,-0.0475867749699227,-0.06478175685557851,-0.0382967049000738,-0.055740287984856,-0.0733943744680263,-0.0734638610721801,-0.0456686445309038,-0.0344199698590224,-0.108255623667062,-0.079021662842422,-0.0526959517083804,-0.145238194597,-0.15553717403163,-0.13609926186802,-0.164139787174565,-0.147801853877947,-0.147842604218306,-0.162509018795519,-0.147406689495589,-0.125394608910856,-0.14856367517832,-0.144609808092849,-0.153360944739978,-0.13644995484715],[0.0619206643974878,0.0516796353467076,0.135673594810548,0.0620774487599491,0.0545744876077146,0.0553939796554785,0.0966748275165497,0.0910689032798285,0.0290335774316672,0.0371165948861334,0.103655389917192,0.0566422675718053,0.06803622869228559,0.0917531799447527,0.138242579635888,0.12265607603064,0.154503054067549,0.102953332014945,0.137785776842342,0.102805633120962,0.12370406940517,0.133083651980845,0.172406748087843,0.120067688357336,0.128083166596934,0.125677959370667,0.0215736012196657,-0.00282563218901409,0.0633480664749877,0.0354492394897548,0.0957287136448651,0.0293976628881581,0.0442699029449484,0.0279209574057434,0.0434094947659093,0.022373213764431,0.054109930319969,0.0462435435402919,0.013496877746204,-0.109562940947552,-0.0447785048844778,-0.113533746002756,-0.0843135263119594,-0.08977348341737559,-0.019938889820978,-0.0954326702289273,-0.0442195350371553,-0.09883145224945861,-0.0976791819467261,-0.09471774896947111,-0.0959097128482418,-0.09417092274044769,0.0453690333286493,0.0544919487296067,0.0421206786320518,0.0493967240408109,0.0396589497746892,0.0470723491592362,0.0436169739618115,0.0455038680150222,0.0380857070249907,0.056313329378925,0.0374092477729748,0.0453218087767018,0.0459280009142817,0.0280110445069786,0.0184340985588823,0.0109113074512509,0.0127803804676796,0.0165811835306351,0.0362599063380564,0.0177488868366703,0.020398045173231,0.0265677790653685,0.0341253805713969,0.0242897822677734,0.023804328858188,0.0394239936332117,0.0770296620999872,0.0823628137521614,0.075400331259608,0.0700326503671706,0.0954474850538565,0.0838019877145275,0.089588399186769,0.07498022078026,0.07645856914193561,0.0827430642110857,0.069905870763235,0.0791365674958229,0.0947387542265794,-0.104273655820777,-0.124560743883008,-0.120166532685882,-0.132201796970384,-0.10346545777081,-0.123339959097352,-0.103468198831796,-0.107244339024075,-0.124420310115998,-0.112633693131374,-0.109496260534087,-0.104677407359659,-0.126183220420771,0.06312788356066611,0.0581202605940087,0.0801068410809901,0.07586184345962289,0.07284362503256051,0.0566531732537656,0.06973238119359371,0.0622874713564076,0.0908126530490268,0.106799171888415,0.07315444641481531,0.07123711485521921,0.0836050716991541,-0.0671066282025566,-0.19622776470055,-0.109136322389806,-0.0613638228563992,-0.17761307560561,-0.100179144568694,-0.0270427658367018,-0.140029759208527,-0.10700112598098,-0.0589542999551767,-0.07468937425058141,-0.192662001264444,-0.031864152389299,-0.135625629084177,-0.132690329966945,-0.1254617646386,-0.106452051930571,-0.1172396758587,-0.128803820658703,-0.124296941167917,-0.146114090864004,-0.126423173820806,-0.130339808101854,-0.133216403931254,-0.127069208809763,-0.113021489826732,0.105879291652446,0.07964654106551471,0.0892419336320265,0.1179929935129,0.0978462657843196,0.0970347936237702,0.090198676768367,0.09421799756547081,0.116602463331192,0.121000164645125,0.09402275036481041,0.0927582289536195,0.09082732411991901,-0.0611309508376135,0.0192663401716041,-0.00583197207510821,-0.024885858483281,-0.00175107818935433,-0.0184876041469689,-0.0253433735435619,-0.0291695885538957,-0.00677427357166334,0.00292039627387615,-0.0540872628925951,-0.0335951604877526,-0.0131391501365087,-0.113566541322205,-0.120339784726491,-0.102130767365548,-0.128853370872972,-0.113947058670741,-0.114083636781473,-0.123944474570237,-0.113097223924687,-0.09190005623356989,-0.113328931521644,-0.108569223248573,-0.116713493797518,-0.106372094162816],[0.118983243668663,0.109130326385004,0.238370806641331,0.116673745087514,0.108087098876064,0.111493688588936,0.17730675093841,0.169188248892023,0.08714192294651429,0.0890245892701588,0.191954031586259,0.119726380505395,0.121827493964009,0.157741672381048,0.200924958406518,0.189217011218071,0.218021101829748,0.165162154270039,0.195529224035831,0.168993657215095,0.190762084218545,0.192836369294177,0.240849540462175,0.187329473360119,0.195530349992548,0.181364596259864,0.132298307334092,0.115828114729776,0.180278166880813,0.146341892228209,0.214669845187192,0.145412686059137,0.165259283726431,0.133574790137829,0.150959985912794,0.13650754146536,0.176979867478066,0.170679472549168,0.116213968793289,-0.0588952487435383,0.0385310272166368,-0.0581943633847234,-0.0122802673530045,-0.0363071519950066,0.112498457844526,-0.0221156135562217,0.08399064984760039,-0.0428654669964455,-0.0414473106625669,-0.0285043504710083,-0.0329962220817979,-0.0363123816122994,0.09689093275188571,0.106799301434278,0.0987227175475231,0.102652634177349,0.0943463881412374,0.099714878404344,0.09982274460761489,0.101205798584015,0.0940644201242385,0.107475547643034,0.0948792780067612,0.100166156182994,0.100673805399305,0.0735629683202239,0.070700763350123,0.0606010733217117,0.0607692037783784,0.06551721555100699,0.0876527281295811,0.0670153663350959,0.07010184817870881,0.0737837886420893,0.0835042187223244,0.07373201699529951,0.0748642130237311,0.0828245003391304,0.156659032099017,0.164216156189158,0.158555750560501,0.147795834037403,0.181283451438238,0.168694008792078,0.173012027203602,0.155207885939961,0.157150753471068,0.164789193581002,0.153665954427661,0.158741667770822,0.172765444582737,-0.056145778386573,-0.0739327286845497,-0.0711330209888066,-0.0833504169591304,-0.052621621816626,-0.0737598352539513,-0.0496973864305508,-0.0536687757439572,-0.0741773298832068,-0.0602227488624906,-0.0572317055127171,-0.0503657342128944,-0.0777189630566979,0.117637384816291,0.116241515775281,0.138961157592795,0.134219926768198,0.134611816048261,0.115154101972981,0.131856426726403,0.120769455543364,0.153204675915159,0.172392180785039,0.136213916087323,0.132614553807633,0.143701651475325,-0.014038512219016,-0.114967548377813,-0.041805601598705,0.00236241758248164,-0.09696823834984571,-0.0324322486167688,0.0581493871762224,-0.0685234624700887,-0.0462707078998738,0.00271564812572658,-0.00027108227419613,-0.106914522778275,0.0274612249200006,-0.06402558320852041,-0.06490336976351679,-0.0560621023872278,-0.037062874529151,-0.0487545247184283,-0.0593550683505078,-0.052647280222885,-0.0730214122956413,-0.0546873783794402,-0.0618864839374112,-0.0611246865204333,-0.0550389284687039,-0.0447487538889584,0.152645782720031,0.12516540177241,0.135829759560412,0.173431400621661,0.146794169262306,0.144888822735386,0.140164174012979,0.146273601241167,0.171373020180046,0.177335298688649,0.145286854561527,0.142215436013731,0.135662597486757,-0.0184464370072823,0.0624905007764078,0.0364090486045044,0.0134188362014103,0.0361944687440537,0.0192159392673767,0.0180029790897338,0.0142488462592892,0.0316951122703365,0.0437556892544142,-0.00702433356900252,0.0112210808487065,0.0256512100267492,-0.0824974904767911,-0.085511946854471,-0.0659403143708721,-0.0972370678961391,-0.079341340773334,-0.0800394508732277,-0.08987362854429121,-0.0780855590376871,-0.0531701936685115,-0.0784580870630617,-0.0727008975968786,-0.0805661899572517,-0.0743884747392288],[0.2521236123238,0.24191584608942,0.466660087874792,0.242576439311841,0.235319322607648,0.235764461434698,0.419255393666061,0.376750436253267,0.203171555881514,0.207378100265186,0.455211664882943,0.285958727817604,0.234094230126047,0.271641892251544,0.332847503773259,0.324009983639741,0.355308885014175,0.289267478916997,0.33436562639847,0.296776837428774,0.333955924023603,0.316691996993982,0.381622276538744,0.327845322017826,0.350083390283595,0.292222859470395,0.339196659287091,0.330624571466921,0.430021697155861,0.361707246826787,0.459474409003573,0.355556095180564,0.414564202610959,0.338333229705667,0.356126766978568,0.35362626648987,0.440720679502033,0.448096759195023,0.313336274357895,0.0609092628111721,0.213300757155469,0.08398459191798779,0.16806032331442,0.08183977855697,0.373784576042011,0.198269187232217,0.391441710023444,0.08929557645810079,0.09998348253857429,0.171130978757828,0.13582396979176,0.104636173185142,0.176702222600436,0.202612237848607,0.192252667696845,0.194693368445108,0.179803015980665,0.188794058937543,0.194092594693231,0.200611485391865,0.177871935571848,0.209011079926337,0.182968667517481,0.189558820247036,0.189269126418795,0.168848843681634,0.177754424455724,0.155188566037752,0.154301348931541,0.166207237729644,0.209027897727033,0.171554549045875,0.179795751549343,0.176491197573489,0.198610970352983,0.189573474004029,0.188466554194694,0.178426477321951,0.325563882422623,0.337458714040256,0.32792239653858,0.320370384473742,0.36502354688916,0.337160676800163,0.354384456347723,0.332465214515619,0.325889597103586,0.341573488747285,0.328339811292422,0.340015335445889,0.350430941983244,0.0350732004848775,0.0165588689273644,0.022810873194397,0.00293581133989915,0.0439561571256275,0.0174751445255941,0.0723923923714678,0.0622215540670352,0.0159953859455982,0.0376193290587172,0.0548101693627127,0.0663435469031117,0.00929976216318237,0.223979510606398,0.22961610622861,0.25518830338322,0.245942378067141,0.2530969286299,0.225769737409214,0.256304988601406,0.237281158596778,0.286624706212506,0.322900769035751,0.260467867756485,0.251995121766774,0.260937315900477,0.09426745415441851,0.0297820951042271,0.09689990390056009,0.142502213980367,0.0386525048509771,0.119164385790662,0.276001951531299,0.0720496912376077,0.0816345565258241,0.149120226456245,0.17670132789303,0.0240230398237546,0.159678173117712,0.0675468717446662,0.07376475086611781,0.0864710658791059,0.104552545216658,0.0913542603088434,0.0668052526944248,0.08706251192064871,0.06915227044919479,0.07834485721221519,0.0891768651203383,0.0802832509327608,0.0787638957032613,0.0838723905625562,0.255944535122097,0.218160180133576,0.238566600930696,0.318007980445675,0.252897006401177,0.259133363999338,0.250337809322686,0.266045510443261,0.315851633139591,0.333258582750757,0.280217653075219,0.25146888450328,0.227889691807811,0.0572323614125652,0.154967481687075,0.123685360806987,0.0854992324731427,0.1156598187003,0.0948066800009387,0.110720874185374,0.100171509130406,0.114935931479844,0.123813662221957,0.07204550236995461,0.09183627438657641,0.103848126324241,-0.0156291599568397,-0.0134147461800111,0.0313746045642399,-0.0382311016093391,-0.00359090605943785,-0.008468289806981871,-0.0193027199408928,0.00462909823898208,0.0496538972766709,0.00175471264285551,0.0214069311894768,0.00863290235326492,-0.00276944570061847],[1.00240903703025,1.00119777474502,1.00144648661785,1.0022538157613,1.00034304295787,1.00166279051574,1.00101311205633,1.00174738195862,1.00002201610564,1.0014567549433,1.00086072200763,1.00214304569025,1.00192318376934,1.00501684006885,1.00847976224172,1.00473697557973,1.00630099296895,1.00434512619835,1.00641382302567,1.00427993622929,1.00501706865703,1.00689435271064,1.00597376194165,1.00533298526953,1.00599271086507,1.00596327983076,1.00378511129712,1.0037277195547,1.00332453397514,1.00215381495942,1.00097028015617,1.00334916128482,1.00382066123471,1.00304375295743,1.00201542242569,1.00477465588166,1.00245408270572,1.00272459090225,1.00393397456082,1.00309008310291,1.00361254220399,1.00399340256401,1.00388472036253,1.0014883899692,1.00402000057791,1.00205242045809,1.00361601167928,1.00253919395963,1.00436788948774,1.0025257155978,1.00201865839157,1.00339632013764,1.0113805442348,1.01057537322989,1.00882711712232,1.00928757671443,1.00956609350843,1.00964922248614,1.00826427923709,1.00846448481097,1.00996110030617,1.0092756219901,1.00633318647012,1.00805352766245,1.00973438800239,1.00321098330641,1.00314897847861,1.00217929123467,1.00284321953777,1.00347166425172,1.00119626417523,1.00260801606766,1.0057067749762,1.00283464893766,1.00224989074242,1.00310912792545,1.0041118111396,1.00301590122049,1.00850119076943,1.00701970084835,1.00658932829837,1.00868053558369,1.00830821666128,1.00672842575549,1.00664998676305,1.00637274190645,1.00781064441672,1.00696725575821,1.00690989201128,1.00902810148396,1.00966520469716,1.00602709976659,1.00390270963372,1.00408834627743,1.00603253678194,1.00388870957157,1.00408492154359,1.00254437320122,1.00279055861772,1.00375441955615,1.0032994512028,1.00274256335921,1.0026423808269,1.00438851577124,1.00824215101767,1.00572679458058,1.00676190098972,1.00765368904135,1.00903753080142,1.00746772523044,1.0089397258342,1.00752884556677,1.0050090573719,1.0044837055433,1.00749508571749,1.00548083892144,1.00746927588786,1.00355384575502,1.00091000186224,1.0015902243182,1.00230704110465,1.00070632248423,1.00311827779008,1.00317599097965,1.00198454099048,1.00222112550343,1.00595104580318,1.00486473331625,1.00243176988003,1.00503964912561,1.0054097835309,1.00571735632601,1.00244757199945,1.00504387382808,1.00348294955004,1.00448529839252,1.00413347485628,1.004197651147,1.00389512640283,1.00494187720164,1.00405689821158,1.00430429785187,1.00537963375108,1.00300027944447,1.00290862513852,1.00292877211871,1.00425259581347,1.00274494722541,1.0029505168618,1.00213649074552,1.0023984409107,1.00156227653248,1.00282633359356,1.00235156070212,1.00166522867428,1.00231219155645,1.00374762023769,1.00322846158385,1.0060864140075,1.00414608138308,1.0054395442025,1.00333872600008,1.00313576409801,1.00360087543985,1.00339807872687,1.0039226237259,1.0024733518293,1.00304269123872,1.00369025023358,1.0021991930626,1.00025510803394,1.00191685599804,1.00045423980897,1.00137041760573,1.00142559739031,1.00042989020063,1.00065475179428,1.00128467658775,1.00108064321214,1.00148967611087,1.00076490818381,1.00233677862252],[3100,4800,4300,3200,5000,3900,5000,3800,5000,4300,5000,3300,3600,1800,1100,1800,1500,2000,1400,2000,1800,1400,1500,1700,1500,1500,2200,2200,2400,3300,5000,2400,2200,2600,3500,1800,3000,2800,2100,2600,2300,2100,2200,4200,2100,3400,2300,3000,2000,3000,3500,2400,860,920,1100,1000,1000,1000,1100,1100,970,1000,1400,1200,990,2500,2500,3300,2700,2400,4800,2900,1600,2700,3200,2600,2100,2600,1100,1300,1400,1100,1100,1400,1400,1400,1200,1300,1300,1100,1000,1500,2200,2100,1500,2200,2100,3000,2800,2200,2500,2800,2900,2000,1100,1600,1400,1200,1100,1300,1100,1200,1800,1900,1200,1600,1300,2300,5000,4100,3200,5000,2600,2500,3500,3300,1500,1800,3100,1700,1600,1600,3100,1700,2400,1900,2100,2000,2200,1800,2100,2000,1700,2600,2700,2700,2000,2800,2700,3400,3100,4100,2800,3100,3900,3200,2200,2500,1500,2100,1600,2400,2500,2300,2400,2100,3000,2600,2200,3300,5000,3600,5000,4400,4300,5000,5000,4600,5000,4200,5000,3200]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>mean<\\/th>\\n      <th>sd<\\/th>\\n      <th>X2.5.<\\/th>\\n      <th>X25.<\\/th>\\n      <th>X50.<\\/th>\\n      <th>X75.<\\/th>\\n      <th>X97.5.<\\/th>\\n      <th>Rhat<\\/th>\\n      <th>n.eff<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"mean\",\"targets\":1},{\"name\":\"sd\",\"targets\":2},{\"name\":\"X2.5.\",\"targets\":3},{\"name\":\"X25.\",\"targets\":4},{\"name\":\"X50.\",\"targets\":5},{\"name\":\"X75.\",\"targets\":6},{\"name\":\"X97.5.\",\"targets\":7},{\"name\":\"Rhat\",\"targets\":8},{\"name\":\"n.eff\",\"targets\":9}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\nAmong population standard deviation in covariate effects\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(param.summary[grepl(\"sigma.coef\", row.names(param.summary)),])\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-c34a1811d1ab2f6fecb0\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c34a1811d1ab2f6fecb0\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"sigma.coef[1]\",\"sigma.coef[2]\",\"sigma.coef[3]\",\"sigma.coef[4]\",\"sigma.coef[5]\",\"sigma.coef[6]\",\"sigma.coef[7]\",\"sigma.coef[8]\",\"sigma.coef[9]\",\"sigma.coef[10]\",\"sigma.coef[11]\",\"sigma.coef[12]\",\"sigma.coef[13]\",\"sigma.coef[14]\"],[0.0881208259679318,0.070222798057702,0.09875834385342699,0.08487750214435941,0.0358579569365584,0.0512634786615258,0.0492367603018132,0.0437345370247966,0.0537627244537878,0.113596853375509,0.0565970768972221,0.0552043368315667,0.0507042692529409,0.0422664764938098],[0.06748181229563981,0.0528433108461015,0.0759114514541009,0.06800572251008059,0.0301083693405853,0.0405528300523585,0.0399865902348446,0.0351971379861479,0.0416103804814324,0.0661179026305011,0.045396219064292,0.0447264170965723,0.0323473416084042,0.032953214207341],[0.00454523649976514,0.00387864901962792,0.00513050294374957,0.00407525477522839,0.00234424913150409,0.00287369004842192,0.00291699360908461,0.00274267104016022,0.00303531942400837,0.00973925515480091,0.00323072251007688,0.00286083766666285,0.00375805629086403,0.00242599905811857],[0.0352887589365028,0.0308897325578857,0.0402509568103953,0.0313869413117321,0.0139125169915532,0.0203937748620263,0.0202251480093515,0.0173184223882938,0.0219905054665885,0.0657889552016081,0.021789540034011,0.0212376208079643,0.0263036860043752,0.0170728612802536],[0.0747678550964697,0.060046050770472,0.08417946841102621,0.07040465544019429,0.0281436387189402,0.0424860820806178,0.0393111169992075,0.0355223336001033,0.0455841335938376,0.108129572031307,0.0463266624322979,0.044890155501388,0.0470378165572241,0.0349322463515836],[0.124514170888125,0.0969966747290376,0.139803925218304,0.122212090291088,0.049356580901195,0.07107406475010131,0.0684146670068784,0.0610001761249569,0.0756203217182346,0.1516519495591,0.0790894600123182,0.0777328402832746,0.0695072430670764,0.0599065611070213],[0.250428233073069,0.198736019525696,0.285483960872093,0.251219950142287,0.115373454415598,0.150919609142931,0.146150379258551,0.128448111261635,0.152708387959071,0.261256825678521,0.169886240605112,0.165443708525243,0.124503018570083,0.123126652669749],[1.00030553630853,1.00125343938195,1.00068701701411,1.00204081395413,1.00023545578418,0.9999621409387009,1.00045293514778,1.00160889230289,1.00078321762582,1.00292778215352,1.00071075462517,1.00014569094528,1.00073951525943,1.00052954040213],[5000,4700,5000,3500,5000,5000,5000,4000,5000,2700,5000,5000,5000,5000]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>mean<\\/th>\\n      <th>sd<\\/th>\\n      <th>X2.5.<\\/th>\\n      <th>X25.<\\/th>\\n      <th>X50.<\\/th>\\n      <th>X75.<\\/th>\\n      <th>X97.5.<\\/th>\\n      <th>Rhat<\\/th>\\n      <th>n.eff<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"mean\",\"targets\":1},{\"name\":\"sd\",\"targets\":2},{\"name\":\"X2.5.\",\"targets\":3},{\"name\":\"X25.\",\"targets\":4},{\"name\":\"X50.\",\"targets\":5},{\"name\":\"X75.\",\"targets\":6},{\"name\":\"X97.5.\",\"targets\":7},{\"name\":\"Rhat\",\"targets\":8},{\"name\":\"n.eff\",\"targets\":9}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\nAge-0/1 proportionality in covariate effects\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmp <- param.summary[grepl(\"p\", row.names(param.summary)),]\ndatatable(tmp[!grepl(c(\"logpred|phi|sigma\"), row.names(tmp)),])\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-07510def06cb8a261037\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-07510def06cb8a261037\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"p[1]\",\"p[2]\",\"p[3]\",\"p[4]\",\"p[5]\",\"p[6]\",\"p[7]\",\"p[8]\",\"p[9]\",\"p[10]\",\"p[11]\",\"p[12]\",\"p[13]\",\"p[14]\"],[0.518140720802779,0.189236899012112,0.552231174047533,0.585626856267468,0.412859343953229,0.513807447058238,0.519464517810972,0.568208216971873,0.672338656299014,0.316805670955981,0.469190735109178,0.650098968517729,0.587931722233126,0.498865074915806],[0.20528247689395,0.21745606114638,0.286993153382274,0.235428119815802,0.329325582499401,0.278744800182977,0.237826332874366,0.197969339465721,0.244843919698378,0.192940707638402,0.200655147581081,0.194619039150429,0.226888876821226,0.268031492415637],[0.0766860263215829,0.00483274729930997,0.0458863779560705,0.0775914161468139,0.0115245639423847,0.0312388794146807,0.06777460268817111,0.142253395623391,0.0909037009983852,0.0248309192901185,0.06745083472707911,0.203434113465572,0.0963643422590322,0.0367815792369674],[0.388350417003437,0.0471730815337144,0.309778627580325,0.421520205718753,0.119145944708576,0.28534996176027,0.34976386534259,0.442463091406703,0.5289129616210601,0.178959652413453,0.340011775029849,0.535732470307111,0.437305632895555,0.281165685070653],[0.520688766260307,0.113570636442176,0.568021606027762,0.604798768974135,0.299251466530216,0.518539910806191,0.514312251604648,0.572438181208846,0.728934204453077,0.294023494758024,0.473331123075006,0.664582709138965,0.607493856221341,0.500347872808322],[0.651985163020717,0.229854024401458,0.80926207145199,0.76945336785286,0.7527615194096779,0.746671887891115,0.694166096253369,0.7028268341248211,0.869676609985308,0.419624612759131,0.59106304183056,0.7901720216052071,0.757829062746933,0.715672401852542],[0.9280804234136401,0.8846812790502619,0.9822615401832691,0.9632300853823,0.976809461902687,0.9761453600123861,0.9518946864805909,0.937499803384425,0.985370679803552,0.7987969731668551,0.897602491907021,0.9674946707093059,0.963425329748575,0.9648607145353409],[1.0003247076478,1.00618856117253,1.00253030178611,1.00539788574783,1.00551339314849,1.00160900015257,1.00343561342347,1.00543903933012,1.00438266584831,1.00129452578387,1.00282626647897,1.00553653505063,1.00154567660924,1.00075155139506],[5000,1500,3000,2100,1600,4000,2500,2400,2800,4600,2800,4100,4500,5000]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>mean<\\/th>\\n      <th>sd<\\/th>\\n      <th>X2.5.<\\/th>\\n      <th>X25.<\\/th>\\n      <th>X50.<\\/th>\\n      <th>X75.<\\/th>\\n      <th>X97.5.<\\/th>\\n      <th>Rhat<\\/th>\\n      <th>n.eff<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"mean\",\"targets\":1},{\"name\":\"sd\",\"targets\":2},{\"name\":\"X2.5.\",\"targets\":3},{\"name\":\"X25.\",\"targets\":4},{\"name\":\"X50.\",\"targets\":5},{\"name\":\"X75.\",\"targets\":6},{\"name\":\"X97.5.\",\"targets\":7},{\"name\":\"Rhat\",\"targets\":8},{\"name\":\"n.eff\",\"targets\":9}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\nObservation and process error\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(param.summary[c(\"sigma.oe\"),])\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-398e2aec1d44e2e165b1\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-398e2aec1d44e2e165b1\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"sigma.oe\"],[0.24764088439194],[0.049082205243652],[0.151037901447521],[0.215725808095732],[0.247716340429137],[0.280625965781204],[0.341742806260773],[1.0065500553919],[2500]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>mean<\\/th>\\n      <th>sd<\\/th>\\n      <th>X2.5.<\\/th>\\n      <th>X25.<\\/th>\\n      <th>X50.<\\/th>\\n      <th>X75.<\\/th>\\n      <th>X97.5.<\\/th>\\n      <th>Rhat<\\/th>\\n      <th>n.eff<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"mean\",\"targets\":1},{\"name\":\"sd\",\"targets\":2},{\"name\":\"X2.5.\",\"targets\":3},{\"name\":\"X25.\",\"targets\":4},{\"name\":\"X50.\",\"targets\":5},{\"name\":\"X75.\",\"targets\":6},{\"name\":\"X97.5.\",\"targets\":7},{\"name\":\"Rhat\",\"targets\":8},{\"name\":\"n.eff\",\"targets\":9}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\nPopulation specific process error\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(param.summary[grepl(\"sigma.pe\", row.names(param.summary)),])\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-56d34bc155975e3a4ecc\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-56d34bc155975e3a4ecc\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"sigma.pe[1]\",\"sigma.pe[2]\",\"sigma.pe[3]\",\"sigma.pe[4]\",\"sigma.pe[5]\",\"sigma.pe[6]\",\"sigma.pe[7]\",\"sigma.pe[8]\",\"sigma.pe[9]\",\"sigma.pe[10]\",\"sigma.pe[11]\",\"sigma.pe[12]\",\"sigma.pe[13]\"],[0.165605031679303,0.305205927132421,0.319886285157856,0.191123509335321,0.190600991418931,0.306803931485341,0.762025999852157,0.82230071652685,0.317452541105982,0.208078626030266,0.634623537010752,0.17728567838374,0.216330437058429],[0.100245823137519,0.115692153946707,0.118372919782329,0.0766897901096994,0.101204948634446,0.0919086595587912,0.126533860718729,0.149458407450142,0.09479531131452031,0.111908407294364,0.195910428089504,0.126509991941148,0.0696729902912227],[0.0102200109508653,0.0776030843732049,0.0753371216236704,0.0457442965435187,0.0153122668252203,0.13308285973736,0.539829062904448,0.521747004428848,0.131579793906355,0.0189824346489449,0.309568848187373,0.009075990621181791,0.0723724479939556],[0.0839577175453734,0.225880825352671,0.242437177575934,0.139260306054713,0.115153525456549,0.247686541528424,0.672890450503104,0.727148951279315,0.257300712625121,0.127091047467256,0.50507442364778,0.0785762668880252,0.171496023654839],[0.158689137821904,0.307211508329143,0.320959141372544,0.185762577896188,0.186574140646058,0.302626465183047,0.752568201160375,0.822299791576544,0.316060560796186,0.200323554371117,0.6125091525223419,0.157383493966337,0.21592892322264],[0.238091513407131,0.381942686911208,0.399736391954478,0.238063754832411,0.257028898203789,0.362561976310189,0.838466235688836,0.917741660267209,0.376822021184142,0.279219684626834,0.743512936217918,0.247384106002293,0.261902041383444],[0.370281449581054,0.527413152695432,0.545757099520272,0.361183971537392,0.401146960191939,0.499187361016367,1.04402998092702,1.12824535549582,0.5102132587743921,0.453249583026188,1.0818221154952,0.474868194338675,0.35467904532139],[1.00074804198951,1.00738329492809,1.00666007418438,1.00346342036504,1.00208060464605,1.0146074739439,1.00054792399313,1.001420367258,1.0043383701213,1.00077608627971,1.00126466239627,1.00199230058111,1.00309753537274],[5000,4100,2200,3400,3700,1600,5000,4300,3600,5000,4600,3500,4100]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>mean<\\/th>\\n      <th>sd<\\/th>\\n      <th>X2.5.<\\/th>\\n      <th>X25.<\\/th>\\n      <th>X50.<\\/th>\\n      <th>X75.<\\/th>\\n      <th>X97.5.<\\/th>\\n      <th>Rhat<\\/th>\\n      <th>n.eff<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6,7,8,9]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"mean\",\"targets\":1},{\"name\":\"sd\",\"targets\":2},{\"name\":\"X2.5.\",\"targets\":3},{\"name\":\"X25.\",\"targets\":4},{\"name\":\"X50.\",\"targets\":5},{\"name\":\"X75.\",\"targets\":6},{\"name\":\"X97.5.\",\"targets\":7},{\"name\":\"Rhat\",\"targets\":8},{\"name\":\"n.eff\",\"targets\":9}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n\nPopulation specific autocorrelation term\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparam.summary[grepl(\"phi\", row.names(param.summary)),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                mean        sd       X2.5.         X25.         X50.       X75.\nphi[1]   0.005063812 0.4596338 -0.85117069 -0.338012115  0.005202864 0.35262679\nphi[2]  -0.175203591 0.5066569 -0.92293609 -0.629986887 -0.212389066 0.24878739\nphi[3]   0.094574311 0.4120175 -0.74379834 -0.180469926  0.101231747 0.38629230\nphi[4]   0.742479256 0.3053589 -0.20709894  0.676838971  0.852868377 0.93351138\nphi[5]   0.375771216 0.4995530 -0.74558997  0.030990250  0.522553772 0.79500090\nphi[6]   0.785682983 0.2013463  0.30695759  0.728047320  0.832382745 0.90984146\nphi[7]   0.425581934 0.2318164 -0.05837264  0.274960267  0.435442041 0.58612602\nphi[8]   0.227272735 0.2750064 -0.33438389  0.041375569  0.238341409 0.41927929\nphi[9]   0.486367905 0.2865146 -0.17863068  0.329390789  0.531976938 0.69184498\nphi[10]  0.387983621 0.5269497 -0.75855528 -0.001369286  0.523717742 0.86731631\nphi[11] -0.163791545 0.3630323 -0.83201950 -0.415746993 -0.182178310 0.07309372\nphi[12]  0.175092959 0.5370432 -0.87854896 -0.244046607  0.244615976 0.63595297\nphi[13]  0.716139980 0.2357869  0.12176328  0.630395049  0.769984647 0.87264117\n           X97.5.      Rhat n.eff\nphi[1]  0.8419893 1.0012332  4700\nphi[2]  0.7781423 1.0018666  3700\nphi[3]  0.8644395 1.0005416  5000\nphi[4]  0.9849991 1.0015518  4200\nphi[5]  0.9674798 1.0011022  5000\nphi[6]  0.9802570 1.0065437  3100\nphi[7]  0.8563271 0.9999963  5000\nphi[8]  0.7271485 1.0018132  3700\nphi[9]  0.9173862 1.0005076  5000\nphi[10] 0.9830725 1.0031115  2600\nphi[11] 0.5977585 1.0008181  5000\nphi[12] 0.9595652 1.0016596  4000\nphi[13] 0.9722093 1.0012004  5000\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n## Scenarios\n\nSet up scenarios for \"static\" scenario calculations, i.e., calculate productivity (Ricker a, ln recruits per spawner), recruitment, and Ricker stock-recruit curves under long-term average conditions and future *discrete* changes in select covariates\n\nHow many MCMC samples are there? (This sets the maximum number of simulations)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(Mcmcdat)[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5000\n```\n\n\n:::\n:::\n\n\n\n\n\n\nSet the number of simulations\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn.simsss <- 1000\n```\n:::\n\n\n\n\n\n\nGet projected seasonal air temperature in 2050 and convert to z-scores based on *covsummary* (for static scenarios)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nat_fal_2050 <- (unlist(airtemp %>% filter(type == \"corrected\", season == \"fal\", year == 2050) %>% select(temp_avg)) - unlist(covsummary[9,\"mean\"])) / unlist(covsummary[9,\"sd\"])\nat_win_2050 <- (unlist(airtemp %>% filter(type == \"corrected\", season == \"win\", year == 2050) %>% select(temp_avg)) - unlist(covsummary[10,\"mean\"])) / unlist(covsummary[10,\"sd\"])\nat_spr_2050 <- (unlist(airtemp %>% filter(type == \"corrected\", season == \"spr\", year == 2050) %>% select(temp_avg)) - unlist(covsummary[11,\"mean\"])) / unlist(covsummary[11,\"sd\"])\nat_sum_2050 <- (unlist(airtemp %>% filter(type == \"corrected\", season == \"sum\", year == 2050) %>% select(temp_avg)) - unlist(covsummary[12,\"mean\"])) / unlist(covsummary[12,\"sd\"])\n```\n:::\n\n\n\n\n\n\nCalculate changes in natural and managed flow for static scenarios\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2 weeks early: May 21 (-1.18 standard deviations)\nearly_runoff <- ((unlist(covsummary[8,\"mean\"]) - 14) - unlist(covsummary[8,\"mean\"])) / unlist(covsummary[8,\"sd\"])\n# Early peak release: May 21, matched to natural early runoff (-1.41 standard deviations)\nearly_release <- ((unlist(covsummary[8,\"mean\"]) - 14) - unlist(covsummary[6,\"mean\"])) / unlist(covsummary[6,\"sd\"])\n# Late peak release: June 27, 2 weeks after long-term average (+0.88 standard deciations)\nlate_release <- ((unlist(covsummary[6,\"mean\"]) + 14) - unlist(covsummary[6,\"mean\"])) / unlist(covsummary[6,\"sd\"])\n# early ramp down: Sept 17, 1 week before long term average (-1.26 standard deviations)\nearly_rampdown <- ((unlist(covsummary[2,\"mean\"]) - 10) - unlist(covsummary[2,\"mean\"])) / unlist(covsummary[2,\"sd\"])\n# late ramp down: Oct 7, 1 week after long term average (+1.26 standard deviations)\nlate_rampdown <- ((unlist(covsummary[2,\"mean\"]) + 10) - unlist(covsummary[2,\"mean\"])) / unlist(covsummary[2,\"sd\"])\n```\n:::\n\n\n\n\n\n\n\nCalculate seasonal warming rates between 2020 and 2050 using linear models: warming is fastest in spring and summer, followed by autumn, and slowest in winter.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1 <- summary(lm(temp_avg ~ year, airtemp %>% filter(type == \"corrected\", season == \"fal\", year %in% c(2020:2050))))\nmod2 <- summary(lm(temp_avg ~ year, airtemp %>% filter(type == \"corrected\", season == \"win\", year %in% c(2020:2050))))\nmod3 <- summary(lm(temp_avg ~ year, airtemp %>% filter(type == \"corrected\", season == \"spr\", year %in% c(2020:2050))))\nmod4 <- summary(lm(temp_avg ~ year, airtemp %>% filter(type == \"corrected\", season == \"sum\", year %in% c(2020:2050))))\n\ntibble(season = c(\"autumn\", \"winter\", \"spring\", \"summer\"),\n       warmingrate = c(round(coefficients(mod1)[2,1], digits = 4),\n                       round(coefficients(mod2)[2,1], digits = 4),\n                       round(coefficients(mod3)[2,1], digits = 4),\n                       round(coefficients(mod4)[2,1], digits = 4)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 2\n  season warmingrate\n  <chr>        <dbl>\n1 autumn      0.0545\n2 winter      0.0332\n3 spring      0.0564\n4 summer      0.0564\n```\n\n\n:::\n:::\n\n\n\n\n\n\nDefine scenarios:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Baseline warming (through 2050)\ncovarvec1 <- c(0,0,0,0,0,0,0,0,at_fal_2050,at_win_2050,at_spr_2050,at_sum_2050,0,0)\n\n# 2. Scen 1 + early peak runoff \ncovarvec2 <- c(0,0,0,0,0,0,0,early_runoff,at_fal_2050,at_win_2050,at_spr_2050,at_sum_2050,0,0)\n\n# 3. Scen 2 + early release\ncovarvec3 <- c(0,0,0,0,0,early_release,0,early_runoff,at_fal_2050,at_win_2050,at_spr_2050,at_sum_2050,0,early_release*early_runoff)\n\n# 4. Scen 2 + late release\ncovarvec4 <- c(0,0,0,0,0,late_release,0,early_runoff,at_fal_2050,at_win_2050,at_spr_2050,at_sum_2050,0,late_release*early_runoff)\n\n# 5. Scen 2 + early ramp down\ncovarvec5 <- c(0,early_rampdown,0,0,0,0,0,early_runoff,at_fal_2050,at_win_2050,at_spr_2050,at_sum_2050,0,0)\n\n# 6. Scen 2 + late ramp down\ncovarvec6 <- c(0,late_rampdown,0,0,0,0,0,early_runoff,at_fal_2050,at_win_2050,at_spr_2050,at_sum_2050,0,0)\n\n# combine scenarios into list\nscenario_list <- list(covarvec1, covarvec2, covarvec3, covarvec4, covarvec5, covarvec6)\n```\n:::\n\n\n\n\n\n\n\n## Productivity\n\n\"Simple\" projections show change in productivity, ln(R/S) or \"Ricker a\", given a specified change in environmental variables relative to baseline (long-term average) conditions. \n\n### Interactive\n\nFor simplicity, only allow users to toggle covariates with \"weak\" (75% credible interval does not include 0) or \"strong\" (95% credible interval does not include 0) effects on productivity. \n\nThis doesn't evaluate, as interactivity is not supported in Quarto/Rmarkdown, but you can download this script and run in RStudio to get a sense of how this would function. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nChangeProdBP <- function(z_jld_rampratemindoy, z_jld_peaktime, z_natq_peaktime, z_temp_winmean, z_temp_sprmean, z_temp_summean) {\n  # mean global and population-specific Ricker a under average conditions\n  #A.mu <- param.summary[\"mu.A\",1]\n  #A.pop <- c()\n  #for (i in 1:n.pops) {\n  #  A.pop[i] <- param.summary[paste(\"A[\", i, \"]\", sep = \"\"),1]\n  #}\n  # carrying capacity with covariate effects and model uncertainty\n  A.mu.change <- unlist(Mcmcdat[,\"mu.coef[2]\"]*z_jld_rampratemindoy + Mcmcdat[,\"mu.coef[6]\"]*z_jld_peaktime + Mcmcdat[,\"mu.coef[8]\"]*z_natq_peaktime + Mcmcdat[,\"mu.coef[10]\"]*z_temp_winmean + Mcmcdat[,\"mu.coef[11]\"]*z_temp_sprmean + Mcmcdat[,\"mu.coef[12]\"]*z_temp_summean + Mcmcdat[,\"mu.coef[14]\"]*z_jld_peaktime*z_natq_peaktime)\n  A.pop.change <- list()\n  for (i in 1:n.pops) {\n    A.pop.change[[i]] <- unlist(Mcmcdat[,paste(\"coef[\",i,\",2]\", sep = \"\")]*z_jld_rampratemindoy + Mcmcdat[,paste(\"coef[\",i,\",6]\", sep = \"\")]*z_jld_peaktime + Mcmcdat[,paste(\"coef[\",i,\",8]\", sep = \"\")]*z_natq_peaktime + Mcmcdat[,paste(\"coef[\",i,\",10]\", sep = \"\")]*z_temp_winmean + Mcmcdat[,paste(\"coef[\",i,\",11]\", sep = \"\")]*z_temp_sprmean + Mcmcdat[,paste(\"coef[\",i,\",12]\", sep = \"\")]*z_temp_summean + Mcmcdat[,paste(\"coef[\",i,\",14]\", sep = \"\")]*z_jld_peaktime*z_natq_peaktime)\n  }\n  simtib <- tibble(population = c(rep(\"Global\", times = dim(Mcmcdat)[1]), rep(popshort, each = dim(Mcmcdat)[1])),\n                   outcome = c(A.mu.change, unlist(A.pop.change))) %>% mutate(population = factor(population, levels = c(\"Global\", popshort)))\n  # plot boxplot with line for reference\n  boxplot(outcome ~ population, data = simtib, xlab = \"Population\", ylab = \"Change in productivity, ln(R/S)\", las = 2, ylim = c(-5,5), col = c(\"red\", rep(\"grey\", times = n.pops)))\n  abline(h = 0, lty = 2)\n}\nmanipulate(ChangeProdBP(z_jld_rampratemindoy, z_jld_peaktime, z_natq_peaktime, z_temp_winmean, z_temp_sprmean, z_temp_summean), \n           z_jld_rampratemindoy = slider(min = covsummary$min_zscore[2], covsummary$max_zscore[2], initial = 0, step = 0.1), \n           z_jld_peaktime = slider(min = covsummary$min_zscore[6], covsummary$max_zscore[6], initial = 0, step = 0.1), \n           z_natq_peaktime = slider(min = covsummary$min_zscore[8], covsummary$max_zscore[8], initial = 0, step = 0.1), \n           z_temp_winmean = slider(min = covsummary$min_zscore[10], covsummary$max_zscore[10], initial = 0, step = 0.1), \n           z_temp_sprmean = slider(min = covsummary$min_zscore[11], covsummary$max_zscore[11], initial = 0, step = 0.1), \n           z_temp_summean = slider(min = covsummary$min_zscore[12], covsummary$max_zscore[12], initial = 0, step = 0.1))\n```\n:::\n\n\n\n\n\n\n\n### Static\n\nVector to store estimated productivity\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nproductivity_list <- list()\n```\n:::\n\n\n\n\n\n\nRun \"simple\" projections, just showing change in A\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (i in 1:length(scenario_list)) {\n  covarvec <- scenario_list[[i]]\n  prodvec <- c()\n  for (j in 1:n.simsss) {\n    anncoveff <- c()\n    for (c in 1:n.covars) { anncoveff[c] <- unlist(Mcmcdat[j,paste(\"mu.coef[\", c, \"]\", sep = \"\")]) * covarvec[c] }\n    prodvec[j] <- sum(anncoveff) \n  }\n  productivity_list[[i]] <- prodvec\n  print(i)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n```\n\n\n:::\n\n```{.r .cell-code}\nprodtib <- tibble(scenario = rep(c(\"sc1\", \"sc2\", \"sc3\", \"sc4\", \"sc5\", \"sc6\"), each = n.simsss),\n                  productivity = unlist(productivity_list))\n```\n:::\n\n\n\n\n\n\nAssign colors based on change in median productivity\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmycols <- rev(hcl.colors(11, \"Blue-Red 2\"))\nmypal <- colorRampPalette(mycols)\nprotib_summ <- prodtib %>% group_by(scenario) %>% summarise(median = median(productivity, na.rm = TRUE)) %>%\n  mutate(cols = mypal(100)[as.numeric(cut(median, breaks = seq(from = -0.5, to = 0.5, by = 0.01)))])\n```\n:::\n\n\n\n\n\n\nPlot\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mar = c(4,4,1,1), mgp = c(2.5,1,0))\nboxplot(productivity ~ scenario, prodtib, xlab = \"Scenario\", ylab = \"Change in productivity\", lty = 1, axes = FALSE, col = protib_summ$cols)\nabline(h = 0, lwd = 1, lty = 2)\naxis(1, at = c(1:6), labels = c(1:6))\naxis(2)\n```\n\n::: {.cell-output-display}\n![](FutureProjections_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# par(mgp = c(2.5,4.75,0))\n# axis(1, at = c(1:6), labels = c(\"(1)\\nProjected\\nwarming\\n(2050)\\n \", \n#                                 \"(2)\\nWarming (2050)\\nEarly runoff (2 wks)\\n \", \n#                                 \"(3)\\nWarming (2050)\\nEarly runoff (2 wks)\\nEarly release (matched)\",\n#                                 \"(4)\\nWarming (2050)\\nEarly runoff (2 wks)\\nLate release (2 wks)\",\n#                                 \"(5)\\nWarming (2050)\\nEarly runoff (2 wks)\\nEarly ramp-down (1 wk)\",\n#                                 \"(6)\\nWarming (2050)\\nEarly runoff (2 wks)\\nLate ramp-down (1 wk)\"))\n# par(mgp = c(2.5,1,0))\n# axis(2)\n```\n:::\n\n\n\n\n\n\n\n## Recruitment\n\nThe \"simple\" projections of change in productivity (above) fail to capture dramatic differences in redd densities among streams, which range from 14.9 redds/km in Blue Crane Creek to 254.7 redds per km in Blacktail Spring. Management actions based on projections of among-population mean productivity would act to benefit all populations equally, implicitly valuing population diversity (i.e., preserving as many populations as possible). However, managers may also wish to understand how alternative management actions affect total recruitment (redd density *summed* across populations), which effectively values populations according to their size (i.e., management actions may be favored if they disproportionately benefit a large population, even if it comes at a cost to a smaller population). In this section, I calculate changes in recruitment for each population and summed across all populations under alternative scenarios of climate change and water management (*sensu* Murdoch et al. 2024). This approach also accounts for population-level variation in the effect of environmental variables on productivity.\n\nAs above, only vary environmental variables that were found to have either weak or strong effects on productivity\n\n\n#### Interactive\n\nThis does not evaluate in Quarto, but can be run in RStudio\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nChangeRecBP <- function(z_jld_rampratemindoy, z_jld_peaktime, z_natq_peaktime, z_temp_winmean, z_temp_sprmean, z_temp_summean) {\n  # empty matrix to store recruitment predictions\n  R.pop.change <- matrix(data = NA, nrow = dim(Mcmcdat)[1], ncol = n.pops)\n  # fill matrix\n  for (i in 1:n.pops) {\n    # calculate effect of covariates\n    coveff <- Mcmcdat[,paste(\"coef[\",i,\",2]\", sep = \"\")]*z_jld_rampratemindoy + Mcmcdat[,paste(\"coef[\",i,\",6]\", sep = \"\")]*z_jld_peaktime + Mcmcdat[,paste(\"coef[\",i,\",8]\", sep = \"\")]*z_natq_peaktime + Mcmcdat[,paste(\"coef[\",i,\",10]\", sep = \"\")]*z_temp_winmean + Mcmcdat[,paste(\"coef[\",i,\",11]\", sep = \"\")]*z_temp_sprmean + Mcmcdat[,paste(\"coef[\",i,\",12]\", sep = \"\")]*z_temp_summean + Mcmcdat[,paste(\"coef[\",i,\",14]\", sep = \"\")]*z_jld_peaktime*z_natq_peaktime\n    # Calculate change in recruitment (relative to long-term median redd density)\n    R.pop.change[,i] <- unlist(reddctsumm$med.redds[i] * exp(Mcmcdat[,paste(\"A[\",i,\"]\", sep = \"\")] - (Mcmcdat[,paste(\"B[\",i,\"]\", sep = \"\")] * reddctsumm$med.redds[i]) + coveff)) - reddctsumm$med.redds[i]\n  }\n  # sum changes in recruitment across populations\n  R.pop.change <- cbind(rowSums(R.pop.change), R.pop.change)\n  colnames(R.pop.change) <- c(\"Total\", popshort)\n  # plot\n  boxplot(R.pop.change, las = 2, ylim = c(-1000,1000), col = c(\"red\", rep(\"grey\", times = n.pops)))\n  abline(h = 0, lty = 2)\n}\n\n\nmanipulate(ChangeRecBP(z_jld_rampratemindoy, z_jld_peaktime, z_natq_peaktime, z_temp_winmean, z_temp_sprmean, z_temp_summean), \n           z_jld_rampratemindoy = slider(min = covsummary$min_zscore[2], covsummary$max_zscore[2], initial = 0, step = 0.1), \n           z_jld_peaktime = slider(min = covsummary$min_zscore[6], covsummary$max_zscore[6], initial = 0, step = 0.1), \n           z_natq_peaktime = slider(min = covsummary$min_zscore[8], covsummary$max_zscore[8], initial = 0, step = 0.1), \n           z_temp_winmean = slider(min = covsummary$min_zscore[10], covsummary$max_zscore[10], initial = 0, step = 0.1), \n           z_temp_sprmean = slider(min = covsummary$min_zscore[11], covsummary$max_zscore[11], initial = 0, step = 0.1), \n           z_temp_summean = slider(min = covsummary$min_zscore[12], covsummary$max_zscore[12], initial = 0, step = 0.1))\n```\n:::\n\n\n\n\n\n\n\n### Static\n\nVector to store estimated recruitment\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrecruitment_array <- array(data = NA, dim = c(n.simsss, n.pops, length(scenario_list)))\nrecruitment_summed <- matrix(data = NA, nrow = n.simsss, ncol = length(scenario_list))\n```\n:::\n\n\n\n\n\n\nRun recruitment projections\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# calculation change in recruitment for each population\nfor (i in 1:length(scenario_list)) {\n  covarvec <- scenario_list[[i]]\n  for (j in 1:n.pops) {\n    coveff <- \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",1]\", sep = \"\")]*covarvec[1] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",2]\", sep = \"\")]*covarvec[2] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",3]\", sep = \"\")]*covarvec[3] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",4]\", sep = \"\")]*covarvec[4] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",5]\", sep = \"\")]*covarvec[5] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",6]\", sep = \"\")]*covarvec[6] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",7]\", sep = \"\")]*covarvec[7] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",8]\", sep = \"\")]*covarvec[8] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",9]\", sep = \"\")]*covarvec[9] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",10]\", sep = \"\")]*covarvec[10] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",11]\", sep = \"\")]*covarvec[11] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",12]\", sep = \"\")]*covarvec[12] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",13]\", sep = \"\")]*covarvec[13] + \n      Mcmcdat[1:n.simsss,paste(\"coef[\",i,\",14]\", sep = \"\")]*covarvec[14]\n    recruitment_array[,j,i] <- unlist(reddctsumm$med.redds[j] * exp(Mcmcdat[1:n.simsss,paste(\"A[\",j,\"]\", sep = \"\")] - (Mcmcdat[1:n.simsss,paste(\"B[\",j,\"]\", sep = \"\")] * reddctsumm$med.redds[j]) + coveff)) - reddctsumm$med.redds[j]\n  }\n}\n# sum over populations\nfor (i in 1:dim(recruitment_array)[3]) {\n  recruitment_summed[,i] <- rowSums(recruitment_array[,,i])\n}\nrectib <- tibble(scenario = rep(c(\"sc1\", \"sc2\", \"sc3\", \"sc4\", \"sc5\", \"sc6\"), each = n.simsss),\n                 recruitment = c(recruitment_summed))\n```\n:::\n\n\n\n\n\n\nAssign colors based on change in median productivity\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmycols <- rev(hcl.colors(11, \"Blue-Red 2\"))\nmypal <- colorRampPalette(mycols)\nrectib_summ <- rectib %>% group_by(scenario) %>% summarise(median = median(recruitment, na.rm = TRUE)) %>%\n  mutate(cols = mypal(100)[as.numeric(cut(median, breaks = seq(from = -1000, to = 1000, by = 100)))])\n```\n:::\n\n\n\n\n\n\nPlot\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mar = c(4,4,1,1), mgp = c(2.5,1,0))\nboxplot(recruitment ~ scenario, rectib, xlab = \"Scenario\", ylab = \"Change in recruitment (redds/km)\", lty = 1, axes = FALSE, ylim = c(-1000, 5000))\nabline(h = 0, lwd = 1, lty = 2)\naxis(1, at = c(1:6), labels = c(1:6))\naxis(2)\n```\n\n::: {.cell-output-display}\n![](FutureProjections_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n## Rule Curves\n\nCalculate population-specific Ricker stock-recruit curves and show how these change under alternative climate and water management scenarios.\n\n\n### Interactive\n\nAs above, this does not evaluate in Quarto\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRicker <- function(z_jld_rampratemindoy, z_jld_peaktime, z_natq_peaktime, z_temp_winmean, z_temp_sprmean, z_temp_summean, population) {\n  j <- population\n  # necessary vectors\n  npoints <- 500\n  maxsp <- 400\n  spawners <- seq(from = 0, to = maxsp, length.out = npoints)\n  recruits <- vector(length = npoints)\n  # calculate recruitment with covariate effects\n  for (i in 1:npoints) { recruits[i] <- exp(log(spawners[i]) + param.summary[paste(\"A[\", j, \"]\", sep = \"\"),1] - param.summary[paste(\"B[\", j, \"]\", sep = \"\"),1]*exp(log(spawners[i])) + param.summary[paste(\"coef[\", j, \",2]\", sep = \"\"),1]*z_jld_rampratemindoy + param.summary[paste(\"coef[\", j, \",6]\", sep = \"\"),1]*z_jld_peaktime + param.summary[paste(\"coef[\", j, \",8]\", sep = \"\"),1]*z_natq_peaktime + param.summary[paste(\"coef[\", j, \",10]\", sep = \"\"),1]*z_temp_winmean + param.summary[paste(\"coef[\", j, \",11]\", sep = \"\"),1]*z_temp_sprmean + param.summary[paste(\"coef[\", j, \",12]\", sep = \"\"),1]*z_temp_summean) }\n  # carrying capacity under average conditions\n  # K.mu <- (param.summary[\"mu.A\",1]) / param.summary[\"mu.B\",1]\n  # carrying capacity with covariate effects\n  # K <- (param.summary[\"mu.A\",1] + param.summary[\"mu.coef[1]\",1]*x1 + param.summary[\"mu.coef[2]\",1]*x2 + param.summary[\"mu.coef[3]\",1]*x1*x2) / param.summary[\"mu.B\",1]\n  # plot stock-recruitment Ricker curve with lines and text denoting change in carrying capacity\n  plot(x = spawners, y = recruits, type = \"l\", xaxs = \"i\", yaxs = \"i\", xlim = c(0,maxsp), ylim = c(0,maxsp), lwd = 2, col = \"blue\", xlab = \"Spawners (redds/km)\", ylab =\"Recruits (redds/km)\", main = poplong[j])\n  # arrows(x0 = K, y0 = -50, x1 = K, y1 = K, col = \"blue\", length = 0, lwd = 0.75)\n  # text(x = K+1, y = 5, labels = paste(round((K/K.mu)*100), \"%\", sep = \"\"), col = \"blue\", srt = 90)\n  abline(a = 0, b = 1, lty = 2)\n}\n\n\nmanipulate(Ricker(z_jld_rampratemindoy, z_jld_peaktime, z_natq_peaktime, z_temp_winmean, z_temp_sprmean, z_temp_summean, population), \n           population = picker(\"Three Channel Spring\" = 1, \n                               \"Blacktail Spring\" = 2,\n                               \"Blue Crane Creek\" = 3,\n                               \"Cowboy Cabin Spring\" = 4,\n                               \"Fish Creek\" = 5,\n                               \"Flat Creek\" = 6,\n                               \"Little Bar BC Spring\" = 7,\n                               \"Lower Bar BC Spring\" = 8,\n                               \"Nowlin Creek\" = 9,\n                               \"Price Spring\" = 10,\n                               \"Snake River Side Channel\" = 11,\n                               \"Spring Creek\" = 12,\n                               \"Upper Bar BC Spring\" = 13),\n           z_jld_rampratemindoy = slider(min = covsummary$min_zscore[2], covsummary$max_zscore[2], initial = 0, step = 0.1), \n           z_jld_peaktime = slider(min = covsummary$min_zscore[6], covsummary$max_zscore[6], initial = 0, step = 0.1), \n           z_natq_peaktime = slider(min = covsummary$min_zscore[8], covsummary$max_zscore[8], initial = 0, step = 0.1), \n           z_temp_winmean = slider(min = covsummary$min_zscore[10], covsummary$max_zscore[10], initial = 0, step = 0.1), \n           z_temp_sprmean = slider(min = covsummary$min_zscore[11], covsummary$max_zscore[11], initial = 0, step = 0.1), \n           z_temp_summean = slider(min = covsummary$min_zscore[12], covsummary$max_zscore[12], initial = 0, step = 0.1))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n<script src=\"site_libs/leaflet-providers-2.0.0/leaflet-providers_2.0.0.js\"></script>\n<script src=\"site_libs/leaflet-providers-plugin-2.2.2/leaflet-providers-plugin.js\"></script>\n<link href=\"site_libs/HomeButton-0.0.1/home-button.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/HomeButton-0.0.1/home-button.js\"></script>\n<script src=\"site_libs/HomeButton-0.0.1/easy-button-src.min.js\"></script>\n<script src=\"site_libs/clipboard-0.0.1/setClipboardText.js\"></script>\n<link href=\"site_libs/mapviewCSS-0.0.1/mapview-popup.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/mapviewCSS-0.0.1/mapview.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}