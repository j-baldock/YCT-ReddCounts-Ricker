{
  "hash": "5836cdc4c15331362833520b4008601f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Join Fish and Env. Data\"\nformat: html\n---\n\n\n\n\n\n\nPurpose: join redd count and environmental covariate data and explore correlations between key environmental variables.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Redd Count Data\n\nLoad YCT redd count data and plot time series\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nredds <- read_csv(\"Data/ReddCounts_WGFD_1971-2021_cleaned.csv\") %>% \n  filter(!stream %in% c(\"Cody\", \"Christiansen\", \"Dave\", \"Laker\")) # drop Cody (too few data points) and Salt River tribs\nredds %>% ggplot() + geom_point(aes(x = year, y = reddspermile)) + geom_line(aes(x = year, y = reddspermile)) + facet_wrap(~ stream, scales = \"free_y\") + theme_bw() + theme(panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-2-1.png){width=768}\n:::\n:::\n\n\n\n\n\n\nMap sites:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreddlocs <- redds %>% group_by(stream) %>% summarize(lat = unique(lat), long = unique(long)) # summarize location data\nreddlocs_sp <- st_as_sf(reddlocs, coords = c(\"long\", \"lat\"), crs = \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84\")\n# st_write(reddlocs_sp, \"Redd Counts Ricker/Spatial/ReddCounts_SpatialLocations.shp\", append = FALSE)\nmapview(reddlocs_sp) # map\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-d3a0639baa83a5fb382e\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d3a0639baa83a5fb382e\">{\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"createMapPane\",\"args\":[\"point\",440]},{\"method\":\"addCircleMarkers\",\"args\":[[43.55623017,43.66881478,43.42787225,43.72893903,43.5467974,43.54300482,43.54701598,43.54628223,43.52638051,43.56333321,43.683012,43.4270652,43.67985923],[-110.7882611,-110.6986929,-110.8246243,-110.6741424,-110.8469954,-110.7255992,-110.7867088,-110.7843594,-110.7321466,-110.792471,-110.70152,-110.8209696,-110.7077563],6,null,\"reddlocs_sp\",{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"pane\":\"point\",\"stroke\":true,\"color\":\"#333333\",\"weight\":1,\"opacity\":[0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9,0.9],\"fill\":true,\"fillColor\":[\"#4B0055\",\"#46226A\",\"#353E7C\",\"#00588B\",\"#007094\",\"#008798\",\"#009B95\",\"#00AE8C\",\"#00BE7D\",\"#53CC67\",\"#96D84B\",\"#CDE030\",\"#FDE333\"],\"fillOpacity\":[0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6,0.6]},null,null,[\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>1&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>3 Channel&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>2&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Blacktail&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>3&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Blue Crane&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>4&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Cowboy Cabin&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>5&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Fish&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>6&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Flat&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>7&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Little Bar BC&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>8&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Lower Bar BC&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>9&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Nowlin&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>10&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Price&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>11&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Snake River Side Channel&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>12&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Spring&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\",\"<div class='scrollableContainer'><table class=mapview-popup id='popup'><tr class='coord'><td><\\/td><th><b>Feature ID&emsp;<\\/b><\\/th><td>13&emsp;<\\/td><\\/tr><tr><td>1<\\/td><th>stream&emsp;<\\/th><td>Upper Bar BC&emsp;<\\/td><\\/tr><tr><td>2<\\/td><th>geometry&emsp;<\\/th><td>sfc_POINT&emsp;<\\/td><\\/tr><\\/table><\\/div>\"],{\"maxWidth\":800,\"minWidth\":50,\"autoPan\":true,\"keepInView\":false,\"closeButton\":true,\"closeOnClick\":true,\"className\":\"\"},[\"3 Channel\",\"Blacktail\",\"Blue Crane\",\"Cowboy Cabin\",\"Fish\",\"Flat\",\"Little Bar BC\",\"Lower Bar BC\",\"Nowlin\",\"Price\",\"Snake River Side Channel\",\"Spring\",\"Upper Bar BC\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addHomeButton\",\"args\":[-110.8469954,43.4270652,-110.6741424,43.72893903,true,\"reddlocs_sp\",\"Zoom to reddlocs_sp\",\"<strong> reddlocs_sp <\\/strong>\",\"bottomright\"]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"CartoDB.DarkMatter\",\"OpenStreetMap\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"reddlocs_sp\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addLegend\",\"args\":[{\"colors\":[\"#4B0055\",\"#46226A\",\"#353E7C\",\"#00588B\",\"#007094\",\"#008798\",\"#009B95\",\"#00AE8C\",\"#00BE7D\",\"#53CC67\",\"#96D84B\",\"#CDE030\",\"#FDE333\"],\"labels\":[\"3 Channel\",\"Blacktail\",\"Blue Crane\",\"Cowboy Cabin\",\"Fish\",\"Flat\",\"Little Bar BC\",\"Lower Bar BC\",\"Nowlin\",\"Price\",\"Snake River Side Channel\",\"Spring\",\"Upper Bar BC\"],\"na_color\":null,\"na_label\":\"NA\",\"opacity\":1,\"position\":\"topright\",\"type\":\"factor\",\"title\":\"reddlocs_sp\",\"extra\":null,\"layerId\":null,\"className\":\"info legend\",\"group\":\"reddlocs_sp\"}]}],\"limits\":{\"lat\":[43.4270652,43.72893903],\"lng\":[-110.8469954,-110.6741424]},\"fitBounds\":[43.4270652,-110.8469954,43.72893903,-110.6741424,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\nExplore autocorrelation, which may be due to stock-recruit dynamics, autocorrelated environmental drivers, or both\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsites <- unique(redds$stream)\npar(mfrow = c(4,4), mgp = c(2.5,1,0), mar = c(3.5,3.5,1,1))\nfor (i in 1:length(sites)) {\n  d <- filter(redds, stream == sites[i])\n  acf(d$reddsperkm, lag.max = 6, plot = TRUE, na.action = na.pass)\n  legend(\"topright\", legend = sites[i], bty = \"n\")\n}\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-4-1.png){width=768}\n:::\n:::\n\n\n\n\n\n\nFor each site, add years in which data was not collected, then calculate lagged redds\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlagg <- 4\nrlist <- list()\nsites <- unique(redds$stream)\nfor (i in 1:length(sites)) {\n  d <- filter(redds, stream == sites[i])\n  df1 <- tibble(year = seq(from = min(d$year, na.rm = TRUE), to = max(d$year, na.rm = T), by = 1))\n  rlist[[i]] <- df1 %>% left_join(d) %>% mutate(stream = sites[i], \n                                                miles = unique(d$miles), \n                                                kms = unique(d$kms), \n                                                lat = unique(d$lat), \n                                                long = unique(d$long),\n                                                reddsperkm_lag4 = lag(reddsperkm, n = lagg))\n}\nredds2 <- bind_rows(rlist)\n```\n:::\n\n\n\n\n\n\nExplore the effect of spawners on productivity to motivate use of Ricker model, *sensu* Jones *et al.* (2020).\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# recruits ~ spawners, combined\n# redds2 %>% ggplot(aes(x = reddsperkm_lag4, y = reddsperkm)) +\n#   geom_point(aes(colour = stream)) +\n#   geom_smooth(method = \"loess\")\n# recruits ~ spawners, by stream\n# redds2 %>% ggplot(aes(x = reddsperkm_lag4, y = reddsperkm)) + \n#   geom_point(aes(colour = year)) + \n#   geom_smooth() +\n#   facet_wrap(~stream, scales = \"free\")\n# # productivity ~ time, by stream\n# redds2 %>% ggplot(aes(x = year, y = log(reddsperkm/reddsperkm_lag4))) + \n#   geom_point(aes(colour = year)) + \n#   geom_smooth() +\n#   facet_wrap(~stream, scales = \"free_y\")\n# productivity ~ spawning stock, combined\n# redds2 %>% ggplot(aes(x = reddsperkm_lag4, y = log(reddsperkm/reddsperkm_lag4))) + \n#   geom_smooth(method = \"lm\") +\n#   geom_point(aes(colour = stream))\n# productivity ~ spawning stock, by stream\nredds2 %>% ggplot(aes(x = reddsperkm_lag4, y = log(reddsperkm/reddsperkm_lag4), colour = year)) + \n  geom_smooth(method = \"lm\") +\n  geom_point(aes(colour = year)) + \n  facet_wrap(~stream, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-6-1.png){width=768}\n:::\n:::\n\n\n\n\n\n\nGet range of years by site\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nredds2 %>% group_by(stream) %>% summarize(start = min(year, na.rm = TRUE), stop = max(year, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 3\n   stream                   start  stop\n   <chr>                    <dbl> <dbl>\n 1 3 Channel                 1973  2014\n 2 Blacktail                 1973  2016\n 3 Blue Crane                1985  2015\n 4 Cowboy Cabin              1980  2016\n 5 Fish                      1984  2016\n 6 Flat                      1976  2015\n 7 Little Bar BC             1978  2016\n 8 Lower Bar BC              1971  2021\n 9 Nowlin                    1976  2015\n10 Price                     1975  2006\n11 Snake River Side Channel  1986  2002\n12 Spring                    1988  2007\n13 Upper Bar BC              1974  2016\n```\n\n\n:::\n\n```{.r .cell-code}\nminby <- min(redds2$year) - 4 # minimum brood year\n```\n:::\n\n\n\n\n\n\n\n\n## Covariate Data\n\nPer Murdoch et al (2023) CJFAS, only include variables for which Pearson's r is < 0.6.\n\nNotes:\n* drop jld_winmean and natq_winmean from same model (pearson r = 0.639 since 1960, 0.79 since 1989)\n\n\nLoad derived data files\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\njldramp <- read_csv(\"Data/Derived/JLD_RampDown_Summary_CalendarYear_1960-2022.csv\") #%>% mutate(broodyr = year) %>% select(-year)\njldflow <- read_csv(\"Data/Derived/JLD_ManagedFlow_Covariates_BroodYear_1960-2022.csv\")\nnatflow <- read_csv(\"Data/Derived/SnakeTribs_NaturalFlow_Covariates_BroodYear_1960-2022.csv\") %>% rename(flowstn = site) #%>% filter(site %in% c(\"SnakeBeFlat\", \"Salt\")) \nairtemp <- read_csv(\"Data/Derived/AirTemperature_Covariates_BroodYear_1960-2022.csv\") %>% filter(site %in% c(\"moose\", \"afton\")) %>% rename(tempstn = site) \n\nunique(natflow$flowstn)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Buffalo\"     \"Fish\"        \"Flat\"        \"Greys\"       \"GrosVentre\" \n[6] \"Salt\"        \"SnakeBeFlat\" \"SnakeMoran\"  \"SnakeNat\"   \n```\n\n\n:::\n:::\n\n\n\n\n\n\n### Check correlation\n\nUse pairs plots to check correlation among key variables, within datasets:\n\n::: panel-tabset\n\n#### Ramp-down: complete\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(jldramp %>% select(jld_rampdur, jld_rampratemindoy, jld_rampratemin_log), progress = FALSE ) # entire time series\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Ramp-down: post-1989\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(jldramp %>% filter(broodyr >= 1989) %>% select(jld_rampdur, jld_rampratemindoy, jld_rampratemin_log) , progress = FALSE) # post-1989\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### JLD flow: complete\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(jldflow %>% select(jld_winmean, jld_winmin, jld_winvar, jld_summean, jld_peakmag, jld_peaktime), progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### JLD flow: post-1989\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(jldflow %>% filter(broodyr >= 1989) %>% select(jld_winmean, jld_winvar, jld_summean, jld_peakmag, jld_peaktime), progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Nat. flow: complete\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(natflow %>% filter(flowstn == \"SnakeNat\") %>% select(natq_annmin, natq_winmean, natq_winvar, natq_peakmag, natq_peaktime), progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Nat. flow: post-1989\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(natflow %>% filter(broodyr >= 1989, flowstn == \"SnakeNat\") %>% select(natq_winmean, natq_winvar, natq_peakmag, natq_peaktime), progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Comb. flow: complete\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(natflow %>% filter(flowstn == \"SnakeBeFlat\") %>% select(natq_winmean, natq_winvar, natq_peakmag, natq_peaktime), progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Comb. flow: post-1989\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(natflow %>% filter(broodyr >= 1989, flowstn == \"SnakeBeFlat\") %>% select(natq_winmean, natq_winvar, natq_peakmag, natq_peaktime), progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Temp: complete\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(airtemp %>% filter(tempstn == \"moose\") %>% select(temp_falmean, temp_winmean, temp_sprmean, temp_summean), progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n#### Temp: post-1989\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggpairs(airtemp %>% filter(broodyr >= 1989, tempstn == \"moose\") %>% select(temp_falmean, temp_winmean, temp_sprmean, temp_summean), progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n:::\n\n\nCheck correlation among variables across datasets:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- jldramp %>% select(broodyr, jld_rampdur, jld_rampratemindoy, jld_rampratemin_log) %>%\n          left_join(jldflow %>% select(broodyr, jld_winmin, jld_summean, jld_peakmag, jld_peaktime)) %>%\n          left_join(natflow %>% filter(flowstn == \"SnakeNat\") %>% select(broodyr, natq_peakmag, natq_peaktime)) %>%\n          #left_join(natflow %>% filter(flowstn == \"SnakeBeFlat\") %>% select(broodyr, natq_winmean)) %>%\n          left_join(airtemp %>% filter(tempstn == \"moose\") %>% select(broodyr, temp_falmean, temp_winmean, temp_sprmean, temp_summean))\nrange(cor(p, use = \"pairwise.complete.obs\")[upper.tri(cor(p, use = \"pairwise.complete.obs\"))])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.5061091  0.5862950\n```\n\n\n:::\n\n```{.r .cell-code}\nggpairs(p, progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\nPost 1989\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- jldramp %>% filter(broodyr >= 1989) %>% select(broodyr, jld_rampdur, jld_rampratemindoy, jld_rampratemin_log) %>%\n          left_join(jldflow %>% filter(broodyr >= 1989) %>% select(broodyr, jld_winmin, jld_summean, jld_peakmag, jld_peaktime)) %>%\n          left_join(natflow %>% filter(broodyr >= 1989) %>% filter(flowstn == \"SnakeNat\") %>% select(broodyr, natq_peakmag, natq_peaktime)) %>%\n          #left_join(natflow %>% filter(broodyr >= 1989) %>% filter(flowstn == \"SnakeBeFlat\") %>% select(broodyr, natq_winmean)) %>%\n          left_join(airtemp %>% filter(broodyr >= 1989) %>% filter(tempstn == \"moose\") %>% select(broodyr, temp_falmean, temp_winmean, temp_sprmean, temp_summean))\nrange(cor(p, use = \"pairwise.complete.obs\")[upper.tri(cor(p, use = \"pairwise.complete.obs\"))])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.5481930  0.5453191\n```\n\n\n:::\n\n```{.r .cell-code}\nggpairs(p, progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\nExperienced flow\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- jldramp %>% select(broodyr, jld_rampdur, jld_rampratemindoy, jld_rampratemin_log) %>%\n          left_join(jldflow %>% select(broodyr, jld_winvar, jld_summean)) %>%\n          #left_join(natflow %>% filter(flowstn == \"SnakeNat\") %>% select(broodyr, natq_peakmag, natq_peaktime)) %>%\n          left_join(natflow %>% filter(flowstn == \"SnakeBeFlat\") %>% select(broodyr, natq_winmean, natq_peakmag, natq_peaktime)) %>%\n          left_join(airtemp %>% filter(tempstn == \"moose\") %>% select(broodyr, temp_falmean, temp_winmean, temp_sprmean, temp_summean)) %>% select(-broodyr)\nrange(cor(p, use = \"complete.obs\")[upper.tri(cor(p, use = \"complete.obs\"))])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.5976980  0.6003041\n```\n\n\n:::\n\n```{.r .cell-code}\nggpairs(p, progress = FALSE)\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n\n\n\n\n\n### Test specific variables\n\n#### Winter flow\n\nJLD and natural winter flow highly correlated, especially after 1989\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nddd <- jldflow %>% select(broodyr, jld_winmean) %>% left_join(natflow %>% filter(flowstn == \"SnakeNat\") %>% select(broodyr, natq_winmean))\ncor.test(ddd$jld_winmean, ddd$natq_winmean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd$jld_winmean and ddd$natq_winmean\nt = 5.6337, df = 46, p-value = 1.022e-06\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.4335332 0.7812567\nsample estimates:\n      cor \n0.6389597 \n```\n\n\n:::\n\n```{.r .cell-code}\nddd1 <- ddd %>% filter(broodyr >= 1989)\ncor.test(ddd1$jld_winmean, ddd1$natq_winmean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd1$jld_winmean and ddd1$natq_winmean\nt = 7.227, df = 32, p-value = 3.29e-08\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.6123541 0.8889125\nsample estimates:\n      cor \n0.7874557 \n```\n\n\n:::\n\n```{.r .cell-code}\nddd1 <- ddd %>% filter(broodyr < 1989)\ncor.test(ddd1$jld_winmean, ddd1$natq_winmean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd1$jld_winmean and ddd1$natq_winmean\nt = 1.563, df = 12, p-value = 0.144\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.1526044  0.7731439\nsample estimates:\n      cor \n0.4112756 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n#### Peak timing\n\nWhile the timing of peak natural vs. managed flows are not correlated during the full or either partial time period, this may be driven by years of missing data for JLD peak flows...where there was not a JLD peak. Time series plots are suspicious\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# peak timing...ok...\nddd <- jldflow %>% select(broodyr, jld_peaktime) %>% left_join(natflow %>% filter(flowstn == \"SnakeNat\") %>% select(broodyr, natq_peaktime))\ncor.test(ddd$jld_peaktime, ddd$natq_peaktime)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd$jld_peaktime and ddd$natq_peaktime\nt = -0.43671, df = 36, p-value = 0.6649\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.3833791  0.2529610\nsample estimates:\n        cor \n-0.07259273 \n```\n\n\n:::\n\n```{.r .cell-code}\nplot(ddd$jld_peaktime, ddd$natq_peaktime, ylab = \"brood year DOY\", xlab = \"year\")\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(jld_peaktime ~ broodyr, ddd, type = \"b\", col = \"blue\")\nlines(natq_peaktime ~ broodyr, ddd, type = \"b\", col = \"red\")\nlegend(\"bottomright\", legend = c(\"JLD\", \"natural\"), lty = 1, col = c(\"blue\", \"red\"))\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-23-2.png){width=672}\n:::\n\n```{.r .cell-code}\nddd1 <- ddd %>% filter(broodyr >= 1989)\ncor.test(ddd1$jld_peaktime, ddd1$natq_peaktime)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd1$jld_peaktime and ddd1$natq_peaktime\nt = -0.62341, df = 23, p-value = 0.5392\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.4986378  0.2805140\nsample estimates:\n       cor \n-0.1289046 \n```\n\n\n:::\n\n```{.r .cell-code}\n#plot(ddd1$jld_peaktime, ddd1$natq_peaktime)\n#abline(a = 0, b = 1)\nddd1 <- ddd %>% filter(broodyr < 1989)\ncor.test(ddd1$jld_peaktime, ddd1$natq_peaktime)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd1$jld_peaktime and ddd1$natq_peaktime\nt = 0.013513, df = 11, p-value = 0.9895\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.5481414  0.5538164\nsample estimates:\n        cor \n0.004074438 \n```\n\n\n:::\n\n```{.r .cell-code}\n#plot(ddd1$jld_peaktime, ddd1$natq_peaktime)\n```\n:::\n\n\n\n\n\n\n#### Peak magnitude\n\nNo multicollinearity issues between the magnitude of peak natural vs. managed flows, although these variables are somewhat correlated prior to 1989.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# peak magnitude...ok...\nddd <- jldflow %>% select(broodyr, jld_peakmag) %>% left_join(natflow %>% filter(flowstn == \"SnakeNat\") %>% select(broodyr, natq_peakmag))\ncor.test(ddd$jld_peakmag, ddd$natq_peakmag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd$jld_peakmag and ddd$natq_peakmag\nt = 4.9086, df = 46, p-value = 1.194e-05\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.3625576 0.7461337\nsample estimates:\n     cor \n0.586295 \n```\n\n\n:::\n\n```{.r .cell-code}\nplot(jld_peakmag ~ broodyr, ddd, type = \"b\", col = \"blue\", ylim = c(3000,20000))\nlines(natq_peakmag ~ broodyr, ddd, type = \"b\", col = \"red\")\nlegend(\"topleft\", legend = c(\"JLD\", \"natural\"), lty = 1, col = c(\"blue\", \"red\"))\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n\n```{.r .cell-code}\nddd1 <- ddd %>% filter(broodyr >= 1989)\ncor.test(ddd1$jld_peakmag, ddd1$natq_peakmag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd1$jld_peakmag and ddd1$natq_peakmag\nt = 3.6311, df = 32, p-value = 0.0009749\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.2471686 0.7426824\nsample estimates:\n      cor \n0.5401836 \n```\n\n\n:::\n\n```{.r .cell-code}\nddd1 <- ddd %>% filter(broodyr < 1989)\ncor.test(ddd1$jld_peakmag, ddd1$natq_peakmag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd1$jld_peakmag and ddd1$natq_peakmag\nt = 3.2601, df = 12, p-value = 0.006828\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.2431875 0.8916793\nsample estimates:\n      cor \n0.6853377 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n#### JLD peak mag and JLD win min\n\nJLD peak flow magnitude and combined winter mean flow are correlated (>0.6)...perhaps an artifact of \"good water years\"\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nddd <- jldflow %>% select(broodyr, jld_peakmag, jld_winmin)\ncor.test(ddd$jld_peakmag, ddd$jld_winmin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd$jld_peakmag and ddd$jld_winmin\nt = 2.2111, df = 61, p-value = 0.03079\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.02640982 0.48727185\nsample estimates:\n      cor \n0.2723925 \n```\n\n\n:::\n\n```{.r .cell-code}\nplot(jld_peakmag ~ broodyr, ddd, type = \"b\", col = \"blue\")\npar(new = TRUE)\nplot(jld_winmin ~ broodyr, ddd, type = \"b\", col = \"red\")\nlegend(\"topleft\", legend = c(\"JLD peak mag\", \"Combined winter mean\"), lty = 1, col = c(\"blue\", \"red\"))\n```\n\n::: {.cell-output-display}\n![](JoinFishDataWithCovariates_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n\n```{.r .cell-code}\nddd1 <- ddd %>% filter(broodyr >= 1989)\ncor.test(ddd1$jld_peakmag, ddd1$jld_winmin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd1$jld_peakmag and ddd1$jld_winmin\nt = 2.4703, df = 32, p-value = 0.01902\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.07173556 0.65034644\nsample estimates:\n      cor \n0.4001932 \n```\n\n\n:::\n\n```{.r .cell-code}\nddd1 <- ddd %>% filter(broodyr < 1989)\ncor.test(ddd1$jld_peakmag, ddd1$jld_winmin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  ddd1$jld_peakmag and ddd1$jld_winmin\nt = 1.9257, df = 27, p-value = 0.06473\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.02176591  0.63335086\nsample estimates:\n     cor \n0.347512 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n### Lag correlations\n\nCheck correlations between variables in year t and t+1 (to separate age-0 and age-1 effects).\n\nWinter variation is the only variable that is moderately correlated between time *t* and *t+1* (0.65)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.test(jldramp$jld_rampdur, lead(jldramp$jld_rampdur))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  jldramp$jld_rampdur and lead(jldramp$jld_rampdur)\nt = 0.96669, df = 60, p-value = 0.3376\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.1299488  0.3623978\nsample estimates:\n      cor \n0.1238389 \n```\n\n\n:::\n\n```{.r .cell-code}\ncor.test(jldramp$jld_rampratemindoy, lead(jldramp$jld_rampratemindoy))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  jldramp$jld_rampratemindoy and lead(jldramp$jld_rampratemindoy)\nt = 4.2439, df = 60, p-value = 7.735e-05\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.2621889 0.6520108\nsample estimates:\n      cor \n0.4804914 \n```\n\n\n:::\n\n```{.r .cell-code}\ncor.test(jldramp$jld_rampratemin_log, lead(jldramp$jld_rampratemin_log))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  jldramp$jld_rampratemin_log and lead(jldramp$jld_rampratemin_log)\nt = 0.70935, df = 60, p-value = 0.4809\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.1622692  0.3333699\nsample estimates:\n       cor \n0.09119508 \n```\n\n\n:::\n\n```{.r .cell-code}\ncor.test(jldflow$jld_winmin, lead(jldflow$jld_winmin))                  # pearsons r = 0.65\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  jldflow$jld_winmin and lead(jldflow$jld_winmin)\nt = 4.3865, df = 60, p-value = 4.729e-05\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.2771030 0.6611604\nsample estimates:\n      cor \n0.4927661 \n```\n\n\n:::\n\n```{.r .cell-code}\ncor.test(jldflow$jld_summean, lead(jldflow$jld_summean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  jldflow$jld_summean and lead(jldflow$jld_summean)\nt = 0.27338, df = 60, p-value = 0.7855\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.2164039  0.2825498\nsample estimates:\n       cor \n0.03527073 \n```\n\n\n:::\n\n```{.r .cell-code}\ncor.test(jldflow$jld_peakmag, lead(jldflow$jld_peakmag))                  # pearsons r = 0.65\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  jldflow$jld_peakmag and lead(jldflow$jld_peakmag)\nt = 2.5116, df = 60, p-value = 0.01473\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.06357118 0.51828219\nsample estimates:\n      cor \n0.3084419 \n```\n\n\n:::\n\n```{.r .cell-code}\ncor.test(jldflow$jld_peaktime, lead(jldflow$jld_peaktime))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  jldflow$jld_peaktime and lead(jldflow$jld_peaktime)\nt = 1.0467, df = 44, p-value = 0.3009\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.1407981  0.4268542\nsample estimates:\n      cor \n0.1558709 \n```\n\n\n:::\n\n```{.r .cell-code}\nd <- natflow %>% filter(flowstn == \"SnakeNat\")\ncor.test(d$natq_peakmag, lead(d$natq_peakmag))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  d$natq_peakmag and lead(d$natq_peakmag)\nt = 0.17576, df = 45, p-value = 0.8613\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.2629533  0.3110188\nsample estimates:\n       cor \n0.02619124 \n```\n\n\n:::\n\n```{.r .cell-code}\ncor.test(d$natq_peaktime, lead(d$natq_peaktime))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  d$natq_peaktime and lead(d$natq_peaktime)\nt = 0.85953, df = 45, p-value = 0.3946\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.1661387  0.3996718\nsample estimates:\n      cor \n0.1270916 \n```\n\n\n:::\n\n```{.r .cell-code}\nd <- airtemp %>% filter(tempstn == \"moose\")\ncor.test(d$temp_falmean, lead(d$temp_falmean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  d$temp_falmean and lead(d$temp_falmean)\nt = 2.5647, df = 56, p-value = 0.01303\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.07193934 0.53749544\nsample estimates:\n      cor \n0.3242108 \n```\n\n\n:::\n\n```{.r .cell-code}\ncor.test(d$temp_winmean, lead(d$temp_winmean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  d$temp_winmean and lead(d$temp_winmean)\nt = 0.82595, df = 58, p-value = 0.4122\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.1502169  0.3521051\nsample estimates:\n      cor \n0.1078205 \n```\n\n\n:::\n\n```{.r .cell-code}\ncor.test(d$temp_sprmean, lead(d$temp_sprmean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  d$temp_sprmean and lead(d$temp_sprmean)\nt = 0.96896, df = 52, p-value = 0.337\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.1395630  0.3871302\nsample estimates:\n      cor \n0.1331742 \n```\n\n\n:::\n\n```{.r .cell-code}\ncor.test(d$temp_summean, lead(d$temp_summean))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's product-moment correlation\n\ndata:  d$temp_summean and lead(d$temp_summean)\nt = 1.3246, df = 53, p-value = 0.191\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.09059664  0.42415727\nsample estimates:\n      cor \n0.1790029 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# correlations among natural, managed, and combined winter flow\nddd <- jldflow %>% select(broodyr, jld_annmin) %>%\n  left_join(natflow %>% filter(flowstn == \"SnakeNat\") %>% select(broodyr, natq_annmin)) %>% \n  left_join(natflow %>% filter(flowstn == \"SnakeBeFlat\") %>% select(broodyr, natq_annmin) %>% rename(expq_annmin = natq_annmin)) \nggpairs(ddd)\nggpairs(ddd %>% filter(broodyr >= 1989))\n\nddd <- jldflow %>% select(broodyr, jld_peakmag) %>%\n  left_join(natflow %>% filter(flowstn == \"SnakeNat\") %>% select(broodyr, natq_peakmag)) %>% \n  left_join(natflow %>% filter(flowstn == \"SnakeBeFlat\") %>% select(broodyr, natq_peakmag) %>% rename(expq_peakmag = natq_peakmag)) \nggpairs(ddd)\nggpairs(ddd %>% filter(broodyr >= 1989))\n\nddd <- jldflow %>% select(broodyr, jld_peaktime) %>%\n  left_join(natflow %>% filter(flowstn == \"SnakeNat\") %>% select(broodyr, natq_peaktime)) %>% \n  left_join(natflow %>% filter(flowstn == \"SnakeBeFlat\") %>% select(broodyr, natq_peaktime) %>% rename(expq_peaktime = natq_peaktime)) \nggpairs(ddd)\nggpairs(ddd %>% filter(broodyr >= 1989))\n\n\n# winter flow time series plots\nddd <- jldflow %>% select(broodyr, jld_annmin) %>% \n  left_join(natflow %>% filter(flowstn == \"SnakeNat\") %>% select(broodyr, natq_annmin)) %>% \n  mutate(tot_annmin = jld_annmin + natq_annmin,\n         prop_annmin = jld_annmin/tot_annmin) %>% filter(!is.na(tot_annmin))\nddd$cor <- NA\nddd$cor[5:44] <- rollapply(ddd, width = 9, function(x) abs(cor(x[,2], x[,3])), by.column = FALSE)\n\npar(mfrow = c(3,1), mar = c(3,4,0.5,0.5), mgp = c(2.5,1,0))\nplot(tot_annmin ~ broodyr, ddd, type = \"n\", ylim = c(0,2500), xlab = \"\", ylab = \"Winter flow (cfs)\", bty = \"l\")\npolygon(x = c(ddd$broodyr, rev(ddd$broodyr)), y = c(rep(0, times = dim(ddd)[1]), rev(ddd$tot_annmin)), border = NA, col = \"grey\")\npolygon(x = c(ddd$broodyr, rev(ddd$broodyr)), y = c(rep(0, times = dim(ddd)[1]), rev(ddd$natq_annmin)), border = NA, col = \"white\")\npolygon(x = c(ddd$broodyr, rev(ddd$broodyr)), y = c(rep(0, times = dim(ddd)[1]), rev(ddd$jld_annmin)), border = NA, col = \"white\")\npolygon(x = c(ddd$broodyr, rev(ddd$broodyr)), y = c(rep(0, times = dim(ddd)[1]), rev(ddd$natq_annmin)), border = NA, col = scales::alpha(\"darkorchid2\", 1))\npolygon(x = c(ddd$broodyr, rev(ddd$broodyr)), y = c(rep(0, times = dim(ddd)[1]), rev(ddd$jld_annmin)), border = NA, col = scales::alpha(\"goldenrod1\", 1))\nlegend(\"topright\", legend = c(\"Total\", \"Natural\", \"Managed\"), fill = c(\"grey\", \"darkorchid2\", \"goldenrod1\"), bty = \"n\")\nplot(prop_annmin ~ broodyr, ddd, type = \"l\", bty = \"l\", xlab = \"\", ylab = \"JLD contribution to winter flow\")\npoints(prop_annmin ~ broodyr, ddd, pch = 16)\nplot(cor ~ broodyr, ddd, type = \"l\", bty = \"l\", xlab = \"\", ylab = \"Correlation (rolling 9-year window)\", ylim = c(0,1))\npoints(cor ~ broodyr, ddd, pch = 16)\nabline(h = 0.6, lty = 2, col = \"red\")\n```\n:::\n\n\n\n\n\n\n\n## Select Covariates and Standardize\n\nPull out relevant variables, trim to temporal extent of redd count data (by brood year. I.e., redd counts start at 1971 but environmental data starts at 1967), and standardize (mean centered and scaled). \n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Managed flow variables\ncovsrc_jldq <- jldramp %>% select(broodyr, jld_rampdur, jld_rampratemindoy, jld_rampratemin_log) %>%\n  filter(broodyr >= minby) %>%\n  left_join(jldflow %>% select(broodyr, jld_winmean, jld_winmin, jld_winvar, jld_summean, jld_peakmag, jld_peaktime)) %>%\n  #mutate(jld_winmin_log = ifelse(jld_winmin_log < 4, NA, jld_winmin_log)) %>%\n  mutate(z_jld_rampdur = scale(jld_rampdur, center = TRUE, scale = TRUE)[,1], \n         z_jld_rampratemindoy = scale(jld_rampratemindoy, center = TRUE, scale = TRUE)[,1], \n         z_jld_rampratemin_log = scale(jld_rampratemin_log, center = TRUE, scale = TRUE)[,1],\n         z_jld_winmean = scale(jld_winmean, center = TRUE, scale = TRUE)[,1],\n         z_jld_winmin = scale(jld_winmin, center = TRUE, scale = TRUE)[,1],\n         z_jld_winvar = scale(jld_winvar, center = TRUE, scale = TRUE)[,1],\n         z_jld_summean = scale(jld_summean, center = TRUE, scale = TRUE)[,1],\n         z_jld_peakmag = scale(jld_peakmag, center = TRUE, scale = TRUE)[,1],\n         z_jld_peaktime = scale(jld_peaktime, center = TRUE, scale = TRUE)[,1])\n#ggpairs(covsrc_jldq %>% select(broodyr, jld_rampdur, jld_rampratemindoy, jld_rampratemin_log, jld_winmean, jld_winmin, jld_winvar, jld_summean, jld_peakmag, jld_peaktime))\n\n# Managed flow variables - ramp-down only\ncovsrc_jldq_rd <- jldramp %>% select(broodyr, jld_rampdur, jld_rampratemindoy, jld_rampratemin_log) %>%\n  filter(broodyr >= minby) %>%\n  #mutate(jld_rampratemin = ifelse(jld_rampratemin < -2000, NA, jld_rampratemin)) %>%\n  mutate(z_jld_rampdur = scale(jld_rampdur, center = TRUE, scale = TRUE)[,1], \n         z_jld_rampratemindoy = scale(jld_rampratemindoy, center = TRUE, scale = TRUE)[,1], \n         z_jld_rampratemin_log = scale(jld_rampratemin_log, center = TRUE, scale = TRUE)[,1])\n#ggpairs(covsrc_jldq_rd %>% select(broodyr, jld_rampdur, jld_rampratemindoy, jld_rampratemin_log))\n\n# Natural/wild flow variables \ncovsrc_natq <- natflow %>% filter(flowstn %in% c(\"SnakeNat\")) %>% # make sure flow station is correct!\n  select(flowstn, broodyr, natq_falmean_log, natq_winmean_log, natq_sprmean_log, natq_summean_log, natq_winvar, natq_peakmag, natq_peaktime) %>% #rename(flowstn = site) %>% \n  filter(broodyr >= minby) %>%\n  mutate(z_natq_winvar = scale(natq_winvar, center = TRUE, scale = TRUE)[,1]) %>%\n  mutate(z_natq_falmean_log = scale(natq_falmean_log, center = TRUE, scale = TRUE)[,1], \n         z_natq_winmean_log = scale(natq_winmean_log, center = TRUE, scale = TRUE)[,1], \n         z_natq_sprmean_log = scale(natq_sprmean_log, center = TRUE, scale = TRUE)[,1], \n         z_natq_summean_log = scale(natq_summean_log, center = TRUE, scale = TRUE)[,1], \n         z_natq_peakmag = scale(natq_peakmag, center = TRUE, scale = TRUE)[,1], \n         z_natq_peaktime = scale(natq_peaktime, center = TRUE, scale = TRUE)[,1]) %>% ungroup()\n#ggpairs(covsrc_natq %>% select(broodyr, natq_falmean_log, natq_winmean_log, natq_sprmean_log, natq_summean_log, natq_winvar, natq_peakmag, natq_peaktime))\n\n# Experienced flow variables\ncovsrc_expq <- natflow %>% filter(flowstn %in% c(\"SnakeBeFlat\")) %>%\n  select(flowstn, broodyr, natq_winmean, natq_winvar, natq_summean, natq_peakmag, natq_peaktime) %>%\n  filter(broodyr >= minby) %>%\n  mutate(z_natq_winmean = scale(natq_winmean, center = TRUE, scale = TRUE)[,1], \n         z_natq_winvar = scale(natq_winvar, center = TRUE, scale = TRUE)[,1], \n         z_natq_summean = scale(natq_summean, center = TRUE, scale = TRUE)[,1], \n         z_natq_peakmag = scale(natq_peakmag, center = TRUE, scale = TRUE)[,1], \n         z_natq_peaktime = scale(natq_peaktime, center = TRUE, scale = TRUE)[,1])\n#ggpairs(covsrc_expq %>% select(broodyr, natq_winmean, natq_winvar, natq_summean, natq_peakmag, natq_peaktime))\n\n# Temperature variables\ncovsrc_temp <- airtemp %>% filter(tempstn %in% c(\"moose\")) %>%\n  select(tempstn, broodyr, temp_falmean, temp_winmean, temp_sprmean, temp_summean) %>% #rename(tempstn = site) %>% #group_by(tempstn) %>%\n  filter(broodyr >= minby) %>%\n  mutate(z_temp_falmean = scale(temp_falmean, center = TRUE, scale = TRUE)[,1], \n         z_temp_winmean = scale(temp_winmean, center = TRUE, scale = TRUE)[,1], \n         z_temp_sprmean = scale(temp_sprmean, center = TRUE, scale = TRUE)[,1], \n         z_temp_summean = scale(temp_summean, center = TRUE, scale = TRUE)[,1]) %>% ungroup()\n#ggpairs(covsrc_temp %>% select(broodyr, temp_falmean, temp_winmean, temp_sprmean, temp_summean))\n```\n:::\n\n\n\n\n\n\nCreate and write out summary tables (means and standard deviations)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# JLD Flow\ncovsrc_jldq_summary <- tibble(cov = c(\"z_jld_rampdur\", \"z_jld_rampratemindoy\", \"z_jld_rampratemin_log\", \"z_jld_winmean\", \"z_jld_winmin\", \"z_jld_winvar\", \"z_jld_summean\", \"z_jld_peakmag\", \"z_jld_peaktime\"),\n                              mean = c(attr(scale(covsrc_jldq$jld_rampdur, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_jldq$jld_rampratemindoy, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_jldq$jld_rampratemin_log, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_jldq$jld_winmean, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_jldq$jld_winmin, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_jldq$jld_winvar, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_jldq$jld_summean, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_jldq$jld_peakmag, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_jldq$jld_peaktime, center = TRUE, scale = TRUE), \"scaled:center\")),\n                              sd = c(attr(scale(covsrc_jldq$jld_rampdur, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_jldq$jld_rampratemindoy, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_jldq$jld_rampratemin_log, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_jldq$jld_winmean, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_jldq$jld_winmin, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_jldq$jld_winvar, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_jldq$jld_summean, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_jldq$jld_peakmag, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_jldq$jld_peaktime, center = TRUE, scale = TRUE), \"scaled:scale\")))\nwrite_csv(covsrc_jldq_summary, \"Data/Derived/ManagedFlow_SummaryMeanSD_1967-2022.csv\")\n\n# Natural Flow\ncovsrc_natq_summary <- tibble(cov = c(\"z_natq_falmean_log\", \"z_natq_winmean_log\", \"z_natq_sprmean_log\", \"z_natq_summean_log\", \"z_natq_winvar\", \"z_natq_peakmag\", \"z_natq_peaktime\"),\n                              mean = c(attr(scale(covsrc_natq$natq_falmean_log, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_natq$natq_winmean_log, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_natq$natq_sprmean_log, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_natq$natq_summean_log, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_natq$natq_winvar, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_natq$natq_peakmag, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_natq$natq_peaktime, center = TRUE, scale = TRUE), \"scaled:center\")),\n                              sd = c(attr(scale(covsrc_natq$natq_falmean_log, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_natq$natq_winmean_log, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_natq$natq_sprmean_log, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_natq$natq_summean_log, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_natq$natq_winvar, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_natq$natq_peakmag, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_natq$natq_peaktime, center = TRUE, scale = TRUE), \"scaled:scale\")))\nwrite_csv(covsrc_natq_summary, \"Data/Derived/NaturalFlow_SummaryMeanSD_1975-2022.csv\")\n\n# Experienced Flow\ncovsrc_expq_summary <- tibble(cov = c(\"z_expq_winmean\", \"z_expq_winvar\", \"z_expq_summean\", \"z_expq_peakmag\", \"z_expq_peaktime\"),\n                              mean = c(attr(scale(covsrc_expq$natq_winmean, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_expq$natq_winvar, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_expq$natq_summean, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_expq$natq_peakmag, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_expq$natq_peaktime, center = TRUE, scale = TRUE), \"scaled:center\")),\n                              sd = c(attr(scale(covsrc_expq$natq_winmean, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_expq$natq_winvar, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_expq$natq_summean, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_expq$natq_peakmag, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_expq$natq_peaktime, center = TRUE, scale = TRUE), \"scaled:scale\")))\nwrite_csv(covsrc_expq_summary, \"Data/Derived/ExperiencedFlow_SummaryMeanSD_1975-2022.csv\")\n\n# Temperature\ncovsrc_temp_summary <- tibble(cov = c(\"z_temp_falmean\", \"z_temp_winmean\", \"z_temp_sprmean\", \"z_temp_summean\"),\n                              mean = c(attr(scale(covsrc_temp$temp_falmean, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_temp$temp_winmean, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_temp$temp_sprmean, center = TRUE, scale = TRUE), \"scaled:center\"),\n                                       attr(scale(covsrc_temp$temp_summean, center = TRUE, scale = TRUE), \"scaled:center\")),\n                              sd = c(attr(scale(covsrc_temp$temp_falmean, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_temp$temp_winmean, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_temp$temp_sprmean, center = TRUE, scale = TRUE), \"scaled:scale\"),\n                                     attr(scale(covsrc_temp$temp_summean, center = TRUE, scale = TRUE), \"scaled:scale\")))\nwrite_csv(covsrc_temp_summary, \"Data/Derived/Temperature_SummaryMeanSD_1967-2022.csv\")\n```\n:::\n\n\n\n\n\n\n\n## Join Covariate and Fish Data\n\n### Separate natural and managed flow components\n\nAge-0 (4-year lag)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nredds3a <- redds2\nredds3a$broodyr <- redds3a$year - 4 # create broodyr variable for joining\nredds3a$tempstn <- ifelse(redds3a$stream %in% c(\"Christiansen\", \"Dave\", \"Laker\"), \"afton\", \"moose\") # basin ID to match to NWS temp station\nredds3a$flowstn <- ifelse(redds3a$stream %in% c(\"Christiansen\", \"Dave\", \"Laker\"), \"Salt\", \"SnakeNat\") # basin ID to match to USGS flow station \nredds3a <- redds3a %>% \n  left_join(covsrc_jldq, by = \"broodyr\") %>% \n  left_join(covsrc_natq, by = c(\"broodyr\", \"flowstn\")) %>% \n  left_join(covsrc_temp, by = c(\"broodyr\", \"tempstn\"))\n```\n:::\n\n\n\n\n\n\nAge-1 (3-year lag)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nredds3b <- redds2\nredds3b$broodyr <- redds3b$year - 3 # create broodyr variable for joining\nredds3b$tempstn <- ifelse(redds3b$stream %in% c(\"Christiansen\", \"Dave\", \"Laker\"), \"afton\", \"moose\") # basin ID to match to NWS temp station\nredds3b$flowstn <- ifelse(redds3b$stream %in% c(\"Christiansen\", \"Dave\", \"Laker\"), \"Salt\", \"SnakeNat\") # basin ID to match to USGS flow station \nredds3b <- redds3b %>% \n  left_join(covsrc_jldq, by = \"broodyr\") %>% \n  left_join(covsrc_natq, by = c(\"broodyr\", \"flowstn\")) %>% \n  left_join(covsrc_temp, by = c(\"broodyr\", \"tempstn\"))\n```\n:::\n\n\n\n\n\n\n\n### Experienced flow\n\nAge-0 (4-year lag)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nredds3c <- redds2\nredds3c$broodyr <- redds3c$year - 4 # create broodyr variable for joining\nredds3c$tempstn <- ifelse(redds3c$stream %in% c(\"Christiansen\", \"Dave\", \"Laker\"), \"afton\", \"moose\") # basin ID to match to NWS temp station\nredds3c$flowstn <- ifelse(redds3c$stream %in% c(\"Christiansen\", \"Dave\", \"Laker\"), \"Salt\", \"SnakeBeFlat\") # basin ID to match to USGS flow station \nredds3c <- redds3c %>% \n  left_join(covsrc_jldq_rd, by = \"broodyr\") %>% \n  left_join(covsrc_expq, by = c(\"broodyr\", \"flowstn\")) %>% \n  left_join(covsrc_temp, by = c(\"broodyr\", \"tempstn\"))\n```\n:::\n\n\n\n\n\n\nAge-1 (3-year lag)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nredds3d <- redds2\nredds3d$broodyr <- redds3d$year - 3 # create broodyr variable for joining\nredds3d$tempstn <- ifelse(redds3d$stream %in% c(\"Christiansen\", \"Dave\", \"Laker\"), \"afton\", \"moose\") # basin ID to match to NWS temp station\nredds3d$flowstn <- ifelse(redds3d$stream %in% c(\"Christiansen\", \"Dave\", \"Laker\"), \"Salt\", \"SnakeBeFlat\") # basin ID to match to USGS flow station \nredds3d <- redds3d %>% \n  left_join(covsrc_jldq_rd, by = \"broodyr\") %>% \n  left_join(covsrc_expq, by = c(\"broodyr\", \"flowstn\")) %>% \n  left_join(covsrc_temp, by = c(\"broodyr\", \"tempstn\"))\n```\n:::\n\n\n\n\n\n\n\n### Write out data files\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(redds3a, \"Data/Derived/ReddCounts_WGFD_1971-2021_cleaned_withFlowTempCovariates_SeparateFlowComponents_age0.csv\")\nwrite_csv(redds3b, \"Data/Derived/ReddCounts_WGFD_1971-2021_cleaned_withFlowTempCovariates_SeparateFlowComponents_age1.csv\")\nwrite_csv(redds3c, \"Data/Derived/ReddCounts_WGFD_1971-2021_cleaned_withFlowTempCovariates_ExperiencedFlow_age0.csv\")\nwrite_csv(redds3d, \"Data/Derived/ReddCounts_WGFD_1971-2021_cleaned_withFlowTempCovariates_ExperiencedFlow_age1.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(natq_winmean ~ broodyr, covsrc_expq, type = \"b\")\nplot(natq_winvar ~ broodyr, covsrc_expq, type = \"b\")\nplot(natq_peakmag ~ broodyr, covsrc_expq, type = \"b\")\nplot(natq_peaktime ~ broodyr, covsrc_expq, type = \"b\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n<script src=\"site_libs/leaflet-providers-2.0.0/leaflet-providers_2.0.0.js\"></script>\n<script src=\"site_libs/leaflet-providers-plugin-2.2.2/leaflet-providers-plugin.js\"></script>\n<link href=\"site_libs/HomeButton-0.0.1/home-button.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/HomeButton-0.0.1/home-button.js\"></script>\n<script src=\"site_libs/HomeButton-0.0.1/easy-button-src.min.js\"></script>\n<script src=\"site_libs/clipboard-0.0.1/setClipboardText.js\"></script>\n<link href=\"site_libs/mapviewCSS-0.0.1/mapview-popup.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/mapviewCSS-0.0.1/mapview.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}